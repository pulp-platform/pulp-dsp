<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="group__MatFillI" kind="group">
    <compoundname>MatFillI</compoundname>
    <title>Identity Matrix Creation</title>
    <innergroup refid="group__MatFillIKernels">Identity Matrix Creation Kernels</innergroup>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__MatFillI_1ga834be45edaf7ff11b191fa1ae70daa2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void plp_mat_fill_I_f32</definition>
        <argsstring>(uint32_t N, float *__restrict__ pDst)</argsstring>
        <name>plp_mat_fill_I_f32</name>
        <param>
          <type>uint32_t</type>
          <declname>N</declname>
        </param>
        <param>
          <type>float *__restrict__</type>
          <declname>pDst</declname>
        </param>
        <briefdescription>
<para>Glue code for creating a 32-bit float identity matrix. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">N</parametername>
</parameternamelist>
<parameterdescription>
<para>Width and height of the matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>Points to the output matrix of shape NxN </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>none </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/src/MatrixFunctions/mat_fill_I/plp_mat_fill_I_f32.c" line="49" column="6" bodyfile="/github/workspace/src/MatrixFunctions/mat_fill_I/plp_mat_fill_I_f32.c" bodystart="49" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="group__MatFillI_1ga631cf56d0fc717324f99a4fdd42e025d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void plp_mat_fill_I_f32_parallel</definition>
        <argsstring>(uint32_t N, uint32_t nPE, float *__restrict__ pDst)</argsstring>
        <name>plp_mat_fill_I_f32_parallel</name>
        <param>
          <type>uint32_t</type>
          <declname>N</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>nPE</declname>
        </param>
        <param>
          <type>float *__restrict__</type>
          <declname>pDst</declname>
        </param>
        <briefdescription>
<para>Glue code for creating a 32-bit float identity matrix in parallel. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">N</parametername>
</parameternamelist>
<parameterdescription>
<para>Width and height of the matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">nPE</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of cores to use for computation </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>Points to the output matrix of shape NxN </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>none </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/src/MatrixFunctions/mat_fill_I/plp_mat_fill_I_f32_parallel.c" line="50" column="6" bodyfile="/github/workspace/src/MatrixFunctions/mat_fill_I/plp_mat_fill_I_f32_parallel.c" bodystart="50" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="group__MatFillI_1ga47770338f12a6c2a8003e7acae4599e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void plp_mat_fill_I_i16</definition>
        <argsstring>(uint32_t N, int16_t *__restrict__ pDst)</argsstring>
        <name>plp_mat_fill_I_i16</name>
        <param>
          <type>uint32_t</type>
          <declname>N</declname>
        </param>
        <param>
          <type>int16_t *__restrict__</type>
          <declname>pDst</declname>
        </param>
        <briefdescription>
<para>Glue code for creating a 16-bit integer identity matrix. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">N</parametername>
</parameternamelist>
<parameterdescription>
<para>Width and height of the matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>Points to the output matrix of shape NxN </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>none </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/src/MatrixFunctions/mat_fill_I/plp_mat_fill_I_i16.c" line="70" column="6" bodyfile="/github/workspace/src/MatrixFunctions/mat_fill_I/plp_mat_fill_I_i16.c" bodystart="70" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="group__MatFillI_1ga2a88d789c42caf618ce9d1ad3c69daf3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void plp_mat_fill_I_i16_parallel</definition>
        <argsstring>(uint32_t N, uint32_t nPE, int16_t *__restrict__ pDst)</argsstring>
        <name>plp_mat_fill_I_i16_parallel</name>
        <param>
          <type>uint32_t</type>
          <declname>N</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>nPE</declname>
        </param>
        <param>
          <type>int16_t *__restrict__</type>
          <declname>pDst</declname>
        </param>
        <briefdescription>
<para>Glue code for creating a 16-bit integer identity matrix in parallel. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">N</parametername>
</parameternamelist>
<parameterdescription>
<para>Width and height of the matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">nPE</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of cores to use for computation </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>Points to the output matrix of shape NxN </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>none </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/src/MatrixFunctions/mat_fill_I/plp_mat_fill_I_i16_parallel.c" line="50" column="6" bodyfile="/github/workspace/src/MatrixFunctions/mat_fill_I/plp_mat_fill_I_i16_parallel.c" bodystart="50" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="group__MatFillI_1ga4e639e60377368e0045248cc5780cc9d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void plp_mat_fill_I_i32</definition>
        <argsstring>(uint32_t N, int32_t *__restrict__ pDst)</argsstring>
        <name>plp_mat_fill_I_i32</name>
        <param>
          <type>uint32_t</type>
          <declname>N</declname>
        </param>
        <param>
          <type>int32_t *__restrict__</type>
          <declname>pDst</declname>
        </param>
        <briefdescription>
<para>Glue code for creating a 32-bit integer identity matrix. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">N</parametername>
</parameternamelist>
<parameterdescription>
<para>Width and height of the matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>Points to the output matrix of shape NxN </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>none </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/src/MatrixFunctions/mat_fill_I/plp_mat_fill_I_i32.c" line="49" column="6" bodyfile="/github/workspace/src/MatrixFunctions/mat_fill_I/plp_mat_fill_I_i32.c" bodystart="49" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="group__MatFillI_1gab5431df12a9f1068ab4b1153961011e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void plp_mat_fill_I_i32_parallel</definition>
        <argsstring>(uint32_t N, uint32_t nPE, int32_t *__restrict__ pDst)</argsstring>
        <name>plp_mat_fill_I_i32_parallel</name>
        <param>
          <type>uint32_t</type>
          <declname>N</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>nPE</declname>
        </param>
        <param>
          <type>int32_t *__restrict__</type>
          <declname>pDst</declname>
        </param>
        <briefdescription>
<para>Glue code for creating a 32-bit integer identity matrix in parallel. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">N</parametername>
</parameternamelist>
<parameterdescription>
<para>Width and height of the matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">nPE</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of cores to use for computation </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>Points to the output matrix of shape NxN </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>none </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/src/MatrixFunctions/mat_fill_I/plp_mat_fill_I_i32_parallel.c" line="50" column="6" bodyfile="/github/workspace/src/MatrixFunctions/mat_fill_I/plp_mat_fill_I_i32_parallel.c" bodystart="50" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="group__MatFillI_1ga68d5dda4085e0dd23332830c47ae1854" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void plp_mat_fill_I_i8</definition>
        <argsstring>(uint32_t N, int8_t *__restrict__ pDst)</argsstring>
        <name>plp_mat_fill_I_i8</name>
        <param>
          <type>uint32_t</type>
          <declname>N</declname>
        </param>
        <param>
          <type>int8_t *__restrict__</type>
          <declname>pDst</declname>
        </param>
        <briefdescription>
<para>Glue code for creating a 8-bit integer identity matrix. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">N</parametername>
</parameternamelist>
<parameterdescription>
<para>Width and height of the matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>Points to the output matrix of shape NxN </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>none </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/src/MatrixFunctions/mat_fill_I/plp_mat_fill_I_i8.c" line="49" column="6" bodyfile="/github/workspace/src/MatrixFunctions/mat_fill_I/plp_mat_fill_I_i8.c" bodystart="49" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="group__MatFillI_1ga1a80ccbba78a2c71c8f6ad184de273cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void plp_mat_fill_I_i8_parallel</definition>
        <argsstring>(uint32_t N, uint32_t nPE, int8_t *__restrict__ pDst)</argsstring>
        <name>plp_mat_fill_I_i8_parallel</name>
        <param>
          <type>uint32_t</type>
          <declname>N</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>nPE</declname>
        </param>
        <param>
          <type>int8_t *__restrict__</type>
          <declname>pDst</declname>
        </param>
        <briefdescription>
<para>Glue code for creating a 8-bit integer identity matrix in parallel. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">N</parametername>
</parameternamelist>
<parameterdescription>
<para>Width and height of the matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">nPE</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of cores to use for computation </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>Points to the output matrix of shape NxN </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>none </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/src/MatrixFunctions/mat_fill_I/plp_mat_fill_I_i8_parallel.c" line="50" column="6" bodyfile="/github/workspace/src/MatrixFunctions/mat_fill_I/plp_mat_fill_I_i8_parallel.c" bodystart="50" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="group__MatFillI_1ga3bb251e9510c8d4fc60de2a16e0bf393" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void plp_mat_fill_I_q16</definition>
        <argsstring>(uint32_t N, int32_t fracBits, int16_t *__restrict__ pDst)</argsstring>
        <name>plp_mat_fill_I_q16</name>
        <param>
          <type>uint32_t</type>
          <declname>N</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>fracBits</declname>
        </param>
        <param>
          <type>int16_t *__restrict__</type>
          <declname>pDst</declname>
        </param>
        <briefdescription>
<para>Glue code for creating a 16-bit fix-point identity matrix. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">N</parametername>
</parameternamelist>
<parameterdescription>
<para>Width and height of the matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">fracBits</parametername>
</parameternamelist>
<parameterdescription>
<para>Decimal point for the appropriate scale </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>Points to the output matrix of shape NxN </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>none </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/src/MatrixFunctions/mat_fill_I/plp_mat_fill_I_q16.c" line="50" column="6" bodyfile="/github/workspace/src/MatrixFunctions/mat_fill_I/plp_mat_fill_I_q16.c" bodystart="50" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="group__MatFillI_1gaf91d8eb1bd0efc6c466f1197a72f82e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void plp_mat_fill_I_q16_parallel</definition>
        <argsstring>(uint32_t N, int32_t fracBits, uint32_t nPE, int16_t *__restrict__ pDst)</argsstring>
        <name>plp_mat_fill_I_q16_parallel</name>
        <param>
          <type>uint32_t</type>
          <declname>N</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>fracBits</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>nPE</declname>
        </param>
        <param>
          <type>int16_t *__restrict__</type>
          <declname>pDst</declname>
        </param>
        <briefdescription>
<para>Glue code for creating a 16-bit fix-point identity matrix in parallel. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">N</parametername>
</parameternamelist>
<parameterdescription>
<para>Width and height of the matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">fracBits</parametername>
</parameternamelist>
<parameterdescription>
<para>Decimal point for the appropriate scale </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">nPE</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of cores to use for computation </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>Points to the output matrix of shape NxN </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>none </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/src/MatrixFunctions/mat_fill_I/plp_mat_fill_I_q16_parallel.c" line="51" column="6" bodyfile="/github/workspace/src/MatrixFunctions/mat_fill_I/plp_mat_fill_I_q16_parallel.c" bodystart="51" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="group__MatFillI_1ga97f673a2793f4d5117ddad9bd27b47aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void plp_mat_fill_I_q32</definition>
        <argsstring>(uint32_t N, int32_t fracBits, int32_t *__restrict__ pDst)</argsstring>
        <name>plp_mat_fill_I_q32</name>
        <param>
          <type>uint32_t</type>
          <declname>N</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>fracBits</declname>
        </param>
        <param>
          <type>int32_t *__restrict__</type>
          <declname>pDst</declname>
        </param>
        <briefdescription>
<para>Glue code for creating a 32-bit fix-point identity matrix. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">N</parametername>
</parameternamelist>
<parameterdescription>
<para>Width and height of the matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">fracBits</parametername>
</parameternamelist>
<parameterdescription>
<para>Decimal point for the appropriate scale </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>Points to the output matrix of shape NxN </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>none </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/src/MatrixFunctions/mat_fill_I/plp_mat_fill_I_q32.c" line="50" column="6" bodyfile="/github/workspace/src/MatrixFunctions/mat_fill_I/plp_mat_fill_I_q32.c" bodystart="50" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="group__MatFillI_1ga7bcf5804ea43d7f66eff88c288173045" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void plp_mat_fill_I_q32_parallel</definition>
        <argsstring>(uint32_t N, int32_t fracBits, uint32_t nPE, int32_t *__restrict__ pDst)</argsstring>
        <name>plp_mat_fill_I_q32_parallel</name>
        <param>
          <type>uint32_t</type>
          <declname>N</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>fracBits</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>nPE</declname>
        </param>
        <param>
          <type>int32_t *__restrict__</type>
          <declname>pDst</declname>
        </param>
        <briefdescription>
<para>Glue code for creating a 32-bit fix-point identity matrix in parallel. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">N</parametername>
</parameternamelist>
<parameterdescription>
<para>Width and height of the matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">fracBits</parametername>
</parameternamelist>
<parameterdescription>
<para>Decimal point for the appropriate scale </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">nPE</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of cores to use for computation </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>Points to the output matrix of shape NxN </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>none </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/src/MatrixFunctions/mat_fill_I/plp_mat_fill_I_q32_parallel.c" line="51" column="6" bodyfile="/github/workspace/src/MatrixFunctions/mat_fill_I/plp_mat_fill_I_q32_parallel.c" bodystart="51" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="group__MatFillI_1gaa73c0274a38006c5987aa3a48ffa7aee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void plp_mat_fill_I_q8</definition>
        <argsstring>(uint32_t N, int32_t fracBits, int8_t *__restrict__ pDst)</argsstring>
        <name>plp_mat_fill_I_q8</name>
        <param>
          <type>uint32_t</type>
          <declname>N</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>fracBits</declname>
        </param>
        <param>
          <type>int8_t *__restrict__</type>
          <declname>pDst</declname>
        </param>
        <briefdescription>
<para>Glue code for creating a 8-bit fix-point identity matrix. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">N</parametername>
</parameternamelist>
<parameterdescription>
<para>Width and height of the matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">fracBits</parametername>
</parameternamelist>
<parameterdescription>
<para>Decimal point for the appropriate scale </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>Points to the output matrix of shape NxN </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>none </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/src/MatrixFunctions/mat_fill_I/plp_mat_fill_I_q8.c" line="50" column="6" bodyfile="/github/workspace/src/MatrixFunctions/mat_fill_I/plp_mat_fill_I_q8.c" bodystart="50" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="group__MatFillI_1gad2b9bb5a67e5dc9512ca5e5654f6daf6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void plp_mat_fill_I_q8_parallel</definition>
        <argsstring>(uint32_t N, int32_t fracBits, uint32_t nPE, int8_t *__restrict__ pDst)</argsstring>
        <name>plp_mat_fill_I_q8_parallel</name>
        <param>
          <type>uint32_t</type>
          <declname>N</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>fracBits</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>nPE</declname>
        </param>
        <param>
          <type>int8_t *__restrict__</type>
          <declname>pDst</declname>
        </param>
        <briefdescription>
<para>Glue code for creating a 8-bit fix-point identity matrix in parallel. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">N</parametername>
</parameternamelist>
<parameterdescription>
<para>Width and height of the matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">fracBits</parametername>
</parameternamelist>
<parameterdescription>
<para>Decimal point for the appropriate scale </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">nPE</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of cores to use for computation </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>Points to the output matrix of shape NxN </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>none </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/src/MatrixFunctions/mat_fill_I/plp_mat_fill_I_q8_parallel.c" line="51" column="6" bodyfile="/github/workspace/src/MatrixFunctions/mat_fill_I/plp_mat_fill_I_q8_parallel.c" bodystart="51" bodyend="66"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>This module contains the glue code for creating identity matrices. The kernel codes (kernels) are in the Module matFillIKernels.</para>
<para>The identity matrix is a square matrix, with the value <computeroutput>1</computeroutput> on it&apos;s main diagonal, and all other values <computeroutput>0</computeroutput>.</para>
<para>There are functions for integer 32- 16- and 8-bit data types, as well as for floating-point. The naming scheme of the functions follows the following pattern (for example <computeroutput>plp_mat_fill_I_i32</computeroutput>): <verbatim>`plp_&lt;function name&gt;_&lt;data type&gt;&lt;precision&gt;[_parallel]`
</verbatim> <table rows="4" cols="2"><row>
<entry thead="yes"><para>name   </para>
</entry><entry thead="yes"><para>description    </para>
</entry></row>
<row>
<entry thead="no"><para>function_name   </para>
</entry><entry thead="no"><para><computeroutput>mat_fill_I</computeroutput>    </para>
</entry></row>
<row>
<entry thead="no"><para>data type   </para>
</entry><entry thead="no"><para>{f, i, q} respectively for floats, integers, fixed points    </para>
</entry></row>
<row>
<entry thead="no"><para>precision   </para>
</entry><entry thead="no"><para>{32, 16, 8} bits   </para>
</entry></row>
</table>
</para>
    </detaileddescription>
  </compounddef>
</doxygen>
