<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="group__MatTransKernels" kind="group">
    <compoundname>MatTransKernels</compoundname>
    <title>matrix transpose Kernels</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__MatTransKernels_1gabb61fe729cb2d579bcfc5e70d78b2f5c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void plp_mat_trans_i16p_xpulpv2</definition>
        <argsstring>(void *args)</argsstring>
        <name>plp_mat_trans_i16p_xpulpv2</name>
        <param>
          <type>void *</type>
          <declname>args</declname>
        </param>
        <briefdescription>
<para>Parallel matrix transpose of 16-bit integer matrices kernel for XPULPV2 extension. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">args</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to <ref refid="structplp__mat__trans__instance__i16" kindref="compound">plp_mat_trans_instance_i16</ref> struct initialized by plp_mat_trans_i16_parallel </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>none</para>
</simplesect>
<simplesect kind="par"><title>Exploiting SIMD instructions</title><para>The 16 bit values are packed two each into 32 bit vectors and then the two dot products are performed on 32 bit vectors, with 32 bit accumulator. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/src/MatrixFunctions/mat_trans/kernels/plp_mat_trans_i16p_xpulpv2.c" line="53" column="6" bodyfile="/github/workspace/src/MatrixFunctions/mat_trans/kernels/plp_mat_trans_i16p_xpulpv2.c" bodystart="53" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="group__MatTransKernels_1ga09be3b484903a5e4e2425a21a880e78d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void plp_mat_trans_i16s_rv32im</definition>
        <argsstring>(const int16_t *__restrict__ pSrc, uint32_t M, uint32_t N, int16_t *__restrict__ pDst)</argsstring>
        <name>plp_mat_trans_i16s_rv32im</name>
        <param>
          <type>const int16_t *__restrict__</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>M</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>N</declname>
        </param>
        <param>
          <type>int16_t *__restrict__</type>
          <declname>pDst</declname>
        </param>
        <briefdescription>
<para>matrix transpose of 16-bit integer matrices kernel for RV32IM extension. </para>
        </briefdescription>
        <detaileddescription>
<para>matrix transpose of a 16-bit integer matrices for RV32IM extension.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrc</parametername>
</parameternamelist>
<parameterdescription>
<para>Points to the input matrix of shape MxN </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">M</parametername>
</parameternamelist>
<parameterdescription>
<para>Height of the input matrix and width of the output matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">N</parametername>
</parameternamelist>
<parameterdescription>
<para>Width of the input matrix and height of the output matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>Points to the output matrix of shape NxM </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>none </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/src/MatrixFunctions/mat_trans/kernels/plp_mat_trans_i16s_rv32im.c" line="67" column="6" bodyfile="/github/workspace/src/MatrixFunctions/mat_trans/kernels/plp_mat_trans_i16s_rv32im.c" bodystart="67" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="group__MatTransKernels_1gae52acdbf2d660c56ab996f5fb049453d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void plp_mat_trans_i16s_xpulpv2</definition>
        <argsstring>(const int16_t *__restrict__ pSrc, uint32_t M, uint32_t N, int16_t *__restrict__ pDst)</argsstring>
        <name>plp_mat_trans_i16s_xpulpv2</name>
        <param>
          <type>const int16_t *__restrict__</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>M</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>N</declname>
        </param>
        <param>
          <type>int16_t *__restrict__</type>
          <declname>pDst</declname>
        </param>
        <briefdescription>
<para>matrix transpose of 16-bit integer matrices kernel for XPULPV2 extension. </para>
        </briefdescription>
        <detaileddescription>
<para>matrix transpose of a 16-bit integer matrices for XPULPV2 extension.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrc</parametername>
</parameternamelist>
<parameterdescription>
<para>Points to the input matrix of shape MxN </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">M</parametername>
</parameternamelist>
<parameterdescription>
<para>Height of the input matrix and width of the output matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">N</parametername>
</parameternamelist>
<parameterdescription>
<para>Width of the input matrix and height of the output matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>Points to the output matrix of shape NxM </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>none </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/src/MatrixFunctions/mat_trans/kernels/plp_mat_trans_i16s_xpulpv2.c" line="51" column="6" bodyfile="/github/workspace/src/MatrixFunctions/mat_trans/kernels/plp_mat_trans_i16s_xpulpv2.c" bodystart="51" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="group__MatTransKernels_1ga0ab84e69e6c49d382ed6946d377a90c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void plp_mat_trans_i32p_xpulpv2</definition>
        <argsstring>(void *args)</argsstring>
        <name>plp_mat_trans_i32p_xpulpv2</name>
        <param>
          <type>void *</type>
          <declname>args</declname>
        </param>
        <briefdescription>
<para>Parallel matrix transpose of 32-bit integer matrices kernel for XPULPV2 extension. </para>
        </briefdescription>
        <detaileddescription>
<para>Parallel matrix transpose of a 32-bit integer matrices for XPULPV2 extension.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">args</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to <ref refid="structplp__mat__trans__instance__i32" kindref="compound">plp_mat_trans_instance_i32</ref> struct initialized by plp_mat_trans_i32_parallel </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>none </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/src/MatrixFunctions/mat_trans/kernels/plp_mat_trans_i32p_xpulpv2.c" line="49" column="6" bodyfile="/github/workspace/src/MatrixFunctions/mat_trans/kernels/plp_mat_trans_i32p_xpulpv2.c" bodystart="49" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="group__MatTransKernels_1ga25baeea7835cd9cdb056a243c0bab5c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void plp_mat_trans_i32s_rv32im</definition>
        <argsstring>(const int32_t *__restrict__ pSrc, uint32_t M, uint32_t N, int32_t *__restrict__ pDst)</argsstring>
        <name>plp_mat_trans_i32s_rv32im</name>
        <param>
          <type>const int32_t *__restrict__</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>M</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>N</declname>
        </param>
        <param>
          <type>int32_t *__restrict__</type>
          <declname>pDst</declname>
        </param>
        <briefdescription>
<para>matrix transpose of 32-bit integer matrices kernel for RV32IM extension. </para>
        </briefdescription>
        <detaileddescription>
<para>matrix transpose of a 32-bit integer matrices for RV32IM extension.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrc</parametername>
</parameternamelist>
<parameterdescription>
<para>Points to the input matrix of shape MxN </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">M</parametername>
</parameternamelist>
<parameterdescription>
<para>Height of the input matrix and width of the output matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">N</parametername>
</parameternamelist>
<parameterdescription>
<para>Width of the input matrix and height of the output matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>Points to the output matrix of shape NxM </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>none </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/src/MatrixFunctions/mat_trans/kernels/plp_mat_trans_i32s_rv32im.c" line="51" column="6" bodyfile="/github/workspace/src/MatrixFunctions/mat_trans/kernels/plp_mat_trans_i32s_rv32im.c" bodystart="51" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="group__MatTransKernels_1gaa2b9f60096898a46ca3a04ebce03bd44" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void plp_mat_trans_i32s_xpulpv2</definition>
        <argsstring>(const int32_t *__restrict__ pSrc, uint32_t M, uint32_t N, int32_t *__restrict__ pDst)</argsstring>
        <name>plp_mat_trans_i32s_xpulpv2</name>
        <param>
          <type>const int32_t *__restrict__</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>M</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>N</declname>
        </param>
        <param>
          <type>int32_t *__restrict__</type>
          <declname>pDst</declname>
        </param>
        <briefdescription>
<para>matrix transpose of 32-bit integer matrices kernel for XPULPV2 extension. </para>
        </briefdescription>
        <detaileddescription>
<para>matrix transpose of a 32-bit integer matrices for XPULPV2 extension.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrc</parametername>
</parameternamelist>
<parameterdescription>
<para>Points to the input matrix of shape MxN </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">M</parametername>
</parameternamelist>
<parameterdescription>
<para>Height of the input matrix and width of the output matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">N</parametername>
</parameternamelist>
<parameterdescription>
<para>Width of the input matrix and height of the output matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>Points to the output matrix of shape NxM </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>none </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/src/MatrixFunctions/mat_trans/kernels/plp_mat_trans_i32s_xpulpv2.c" line="51" column="6" bodyfile="/github/workspace/src/MatrixFunctions/mat_trans/kernels/plp_mat_trans_i32s_xpulpv2.c" bodystart="51" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="group__MatTransKernels_1ga77dd89daf7e8d8c6ab54b3ee21c0a63c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void plp_mat_trans_i8p_xpulpv2</definition>
        <argsstring>(void *args)</argsstring>
        <name>plp_mat_trans_i8p_xpulpv2</name>
        <param>
          <type>void *</type>
          <declname>args</declname>
        </param>
        <briefdescription>
<para>Parallel matrix transpose of 8-bit integer matrices kernel for XPULPV2 extension. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">args</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to <ref refid="structplp__mat__trans__instance__i8" kindref="compound">plp_mat_trans_instance_i8</ref> struct initialized by plp_mat_trans_i8_parallel </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>none</para>
</simplesect>
<simplesect kind="par"><title>Exploiting SIMD instructions</title><para>The 8 bit values are packed four each into 32 bit vectors and then the four dot products are performed on 32 bit vectors, with 32 bit accumulator. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/src/MatrixFunctions/mat_trans/kernels/plp_mat_trans_i8p_xpulpv2.c" line="53" column="6" bodyfile="/github/workspace/src/MatrixFunctions/mat_trans/kernels/plp_mat_trans_i8p_xpulpv2.c" bodystart="53" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="group__MatTransKernels_1gafd99a6bd32f3a925aec7e5affc0ba72b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void plp_mat_trans_i8s_rv32im</definition>
        <argsstring>(const int8_t *__restrict__ pSrc, uint32_t M, uint32_t N, int8_t *__restrict__ pDst)</argsstring>
        <name>plp_mat_trans_i8s_rv32im</name>
        <param>
          <type>const int8_t *__restrict__</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>M</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>N</declname>
        </param>
        <param>
          <type>int8_t *__restrict__</type>
          <declname>pDst</declname>
        </param>
        <briefdescription>
<para>matrix transpose of 8-bit integer matrices kernel for RV32IM extension. </para>
        </briefdescription>
        <detaileddescription>
<para>matrix transpose of a 8-bit integer matrices for RV32IM extension.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrc</parametername>
</parameternamelist>
<parameterdescription>
<para>Points to the input matrix of shape MxN </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">M</parametername>
</parameternamelist>
<parameterdescription>
<para>Height of the input matrix and width of the output matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">N</parametername>
</parameternamelist>
<parameterdescription>
<para>Width of the input matrix and height of the output matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>Points to the output matrix of shape NxM </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>none </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/src/MatrixFunctions/mat_trans/kernels/plp_mat_trans_i8s_rv32im.c" line="51" column="6" bodyfile="/github/workspace/src/MatrixFunctions/mat_trans/kernels/plp_mat_trans_i8s_rv32im.c" bodystart="51" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="group__MatTransKernels_1ga7085874cdfc9e6acb22e75de47632590" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void plp_mat_trans_i8s_xpulpv2</definition>
        <argsstring>(const int8_t *__restrict__ pSrc, uint32_t M, uint32_t N, int8_t *__restrict__ pDst)</argsstring>
        <name>plp_mat_trans_i8s_xpulpv2</name>
        <param>
          <type>const int8_t *__restrict__</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>M</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>N</declname>
        </param>
        <param>
          <type>int8_t *__restrict__</type>
          <declname>pDst</declname>
        </param>
        <briefdescription>
<para>matrix transpose of 8-bit integer matrices kernel for XPULPV2 extension. </para>
        </briefdescription>
        <detaileddescription>
<para>matrix transpose of a 8-bit integer matrices for XPULPV2 extension.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrc</parametername>
</parameternamelist>
<parameterdescription>
<para>Points to the input matrix of shape MxN </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">M</parametername>
</parameternamelist>
<parameterdescription>
<para>Height of the input matrix and width of the output matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">N</parametername>
</parameternamelist>
<parameterdescription>
<para>Width of the input matrix and height of the output matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>Points to the output matrix of shape NxM </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>none </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/src/MatrixFunctions/mat_trans/kernels/plp_mat_trans_i8s_xpulpv2.c" line="51" column="6" bodyfile="/github/workspace/src/MatrixFunctions/mat_trans/kernels/plp_mat_trans_i8s_xpulpv2.c" bodystart="51" bodyend="71"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>This module contains the glue code for matrix transpose. The kernel codes (kernels) are in the Module matrix transpose Kernels.</para>
<para>The transpose of a matrix of shape MxN is another matrix of shape NxM, where the the matrix is flipped:</para>
<para><preformatted>
  pDst[n, m] = pSrc[m, n]
</preformatted></para>
<para>There are functions for integer 32- 16- and 8-bit data types, as well as for floating-point. These functions can also be used for fix-point matrices. </para>
    </detaileddescription>
  </compounddef>
</doxygen>
