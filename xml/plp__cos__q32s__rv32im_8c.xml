<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="plp__cos__q32s__rv32im_8c" kind="file" language="C++">
    <compoundname>plp_cos_q32s_rv32im.c</compoundname>
    <includes refid="plp__common__tables_8h" local="yes">plp_common_tables.h</includes>
    <includes refid="plp__math_8h" local="yes">plp_math.h</includes>
    <incdepgraph>
      <node id="2">
        <label>plp_common_tables.h</label>
        <link refid="plp__common__tables_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>plp_math.h</label>
        <link refid="plp__math_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>rtos_hal.h</label>
        <link refid="rtos__hal_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/github/workspace/src/FastMathFunctions/kernels/plp_cos_q32s_rv32im.c</label>
        <link refid="plp__cos__q32s__rv32im_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>math.h</label>
      </node>
      <node id="6">
        <label>rt/rt_api.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="plp__cos__q32s__rv32im_8c_1a4af8a3822b654227579a9f1e9550ce62" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t plp_cos_q32s_rv32im</definition>
        <argsstring>(int32_t x)</argsstring>
        <name>plp_cos_q32s_rv32im</name>
        <param>
          <type>int32_t</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>q32 cosine function for RV32IM </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">x</parametername>
</parameternamelist>
<parameterdescription>
<para>Scaled input value: Q1.31 value in range [0, +0.9999] and is mapped to [0, 2*PI)</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>cos(x) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/src/FastMathFunctions/kernels/plp_cos_q32s_rv32im.c" line="47" column="9" bodyfile="/github/workspace/src/FastMathFunctions/kernels/plp_cos_q32s_rv32im.c" bodystart="47" bodyend="75"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>=====================================================================</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Project:<sp/><sp/><sp/><sp/><sp/><sp/>PULP<sp/>DSP<sp/>Library</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Title:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plp_cos_q32s_rv32im.c</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Description:<sp/><sp/>Calculates<sp/>cosine<sp/>of<sp/>a<sp/>q32<sp/>scaled<sp/>input<sp/>for<sp/>RV32IM</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>$Date:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>30.07.2020</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>Target<sp/>Processor:<sp/>PULP<sp/>cores</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>=====================================================================<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>2020<sp/>ETH<sp/>Zurich<sp/>and<sp/>University<sp/>of<sp/>Bologna.</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>Author:<sp/>Michael<sp/>Rogenmoser,<sp/>ETH<sp/>Zurich</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>Apache-2.0</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>License);<sp/>you<sp/>may</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>AS<sp/>IS<sp/>BASIS,<sp/>WITHOUT</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>Notice:<sp/>project<sp/>inspired<sp/>by<sp/>ARM<sp/>CMSIS<sp/>DSP<sp/>and<sp/>parts<sp/>of<sp/>source<sp/>code</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>ported<sp/>and<sp/>adopted<sp/>for<sp/>RISC-V<sp/>PULP<sp/>platform<sp/>from<sp/>ARM<sp/>CMSIS<sp/>DSP</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>released<sp/>under<sp/>Copyright<sp/>(C)<sp/>2010-2019<sp/>ARM<sp/>Limited<sp/>or<sp/>its<sp/>affiliates</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/>with<sp/>Apache-2.0.</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="plp__common__tables_8h" kindref="compound">plp_common_tables.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="plp__math_8h" kindref="compound">plp_math.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal">int32_t<sp/><ref refid="plp__math_8h_1a4af8a3822b654227579a9f1e9550ce62" kindref="member">plp_cos_q32s_rv32im</ref>(int32_t<sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>cosVal;<sp/></highlight><highlight class="comment">/*<sp/>Temporary<sp/>input,<sp/>output<sp/>variables<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>index;<sp/><sp/></highlight><highlight class="comment">/*<sp/>Index<sp/>variable<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>a,<sp/>b;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Two<sp/>nearest<sp/>output<sp/>values<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>fract;<sp/><sp/></highlight><highlight class="comment">/*<sp/>Temporary<sp/>values<sp/>for<sp/>fractional<sp/>values<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>add<sp/>0.25<sp/>(pi/2)<sp/>to<sp/>read<sp/>sine<sp/>table<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>x<sp/>=<sp/>(uint32_t)x<sp/>+<sp/>0x20000000;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x<sp/>&lt;<sp/>0)<sp/>{<sp/></highlight><highlight class="comment">/*<sp/>convert<sp/>negative<sp/>numbers<sp/>to<sp/>corresponding<sp/>positive<sp/>ones<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>(uint32_t)x<sp/>+<sp/>0x80000000;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Calculate<sp/>the<sp/>nearest<sp/>index<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>index<sp/>=<sp/>(uint32_t)x<sp/>&gt;&gt;<sp/>FAST_MATH_Q32_SHIFT;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Calculation<sp/>of<sp/>fractional<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>fract<sp/>=<sp/>(x<sp/>-<sp/>(index<sp/>&lt;&lt;<sp/>FAST_MATH_Q32_SHIFT))<sp/>&lt;&lt;<sp/>9;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Read<sp/>two<sp/>nearest<sp/>values<sp/>of<sp/>input<sp/>value<sp/>from<sp/>the<sp/>sin<sp/>table<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>a<sp/>=<sp/><ref refid="plp__common__tables_8h_1a5ece6080827e733dad2c145448184341" kindref="member">sinTable_q32</ref>[index];</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>b<sp/>=<sp/><ref refid="plp__common__tables_8h_1a5ece6080827e733dad2c145448184341" kindref="member">sinTable_q32</ref>[index<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Linear<sp/>interpolation<sp/>process<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>cosVal<sp/>=<sp/>(int64_t)(0x80000000<sp/>-<sp/>fract)<sp/>*<sp/>a<sp/>&gt;&gt;<sp/>32;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>cosVal<sp/>=<sp/>(int32_t)((((int64_t)cosVal<sp/>&lt;&lt;<sp/>32)<sp/>+<sp/>((int64_t)fract<sp/>*<sp/>b))<sp/>&gt;&gt;<sp/>32);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Return<sp/>output<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(cosVal<sp/>&lt;&lt;<sp/>1);</highlight></codeline>
<codeline lineno="75"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/github/workspace/src/FastMathFunctions/kernels/plp_cos_q32s_rv32im.c"/>
  </compounddef>
</doxygen>
