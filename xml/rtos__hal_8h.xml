<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="rtos__hal_8h" kind="file" language="C++">
    <compoundname>rtos_hal.h</compoundname>
    <includes local="yes">rt/rt_api.h</includes>
    <includedby refid="plp__math_8h" local="yes">/github/workspace/include/plp_math.h</includedby>
    <includedby refid="plp__conv__parallel__OLA_8c" local="yes">/github/workspace/src/FilteringFunctions/kernels/plp_conv_parallel_OLA.c</includedby>
    <includedby refid="plp__conv__parallel__OLA__kernel_8c" local="yes">/github/workspace/src/FilteringFunctions/kernels/plp_conv_parallel_OLA_kernel.c</includedby>
    <includedby refid="plp__conv__i16__parallel_8c" local="yes">/github/workspace/src/FilteringFunctions/plp_conv_i16_parallel.c</includedby>
    <includedby refid="plp__conv__i32__parallel_8c" local="yes">/github/workspace/src/FilteringFunctions/plp_conv_i32_parallel.c</includedby>
    <includedby refid="plp__conv__i8__parallel_8c" local="yes">/github/workspace/src/FilteringFunctions/plp_conv_i8_parallel.c</includedby>
    <incdepgraph>
      <node id="1">
        <label>/github/workspace/include/rtos_hal.h</label>
        <link refid="rtos__hal_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>rt/rt_api.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3">
        <label>/github/workspace/include/plp_common_tables.h</label>
        <link refid="plp__common__tables_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>/github/workspace/include/plp_const_structs.h</label>
        <link refid="plp__const__structs_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>/github/workspace/include/plp_math.h</label>
        <link refid="plp__math_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/github/workspace/include/rtos_hal.h</label>
        <link refid="rtos__hal_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>/github/workspace/src/CommonTables/plp_common_tables.c</label>
        <link refid="plp__common__tables_8c"/>
      </node>
      <node id="5">
        <label>/github/workspace/src/CommonTables/plp_const_structs.c</label>
        <link refid="plp__const__structs_8c"/>
      </node>
      <node id="6">
        <label>/github/workspace/src/CommonTables/plp_dwt_structs.c</label>
        <link refid="plp__dwt__structs_8c"/>
      </node>
      <node id="8">
        <label>/github/workspace/src/TransformFunctions/plp_dwt_common.h</label>
        <link refid="plp__dwt__common_8h_source"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="rtos__hal_8h_1a5bfe9f98502a599a3ea9cd5887936802" prot="public" static="no">
        <name>HAL_L1</name>
        <initializer>RT_CL_DATA</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/include/rtos_hal.h" line="130" column="9" bodyfile="/github/workspace/include/rtos_hal.h" bodystart="130" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="rtos__hal_8h_1a086bc4605ba717d276ff32a3aa83f717" prot="public" static="no">
        <name>HAL_CL_L1</name>
        <initializer>RT_CL_DATA</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/include/rtos_hal.h" line="131" column="9" bodyfile="/github/workspace/include/rtos_hal.h" bodystart="131" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="rtos__hal_8h_1a82ff89aff1f50e3e6847fea45fd4485d" prot="public" static="no">
        <name>HAL_L2</name>
        <initializer>RT_L2_DATA</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/include/rtos_hal.h" line="132" column="9" bodyfile="/github/workspace/include/rtos_hal.h" bodystart="132" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="rtos__hal_8h_1acc99675f4371585d54e9fb0248bfbbbf" prot="public" static="no">
        <name>HAL_CL_DMA_DIR_EXT2LOC</name>
        <initializer>RT_DMA_DIR_EXT2LOC</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/include/rtos_hal.h" line="175" column="9" bodyfile="/github/workspace/include/rtos_hal.h" bodystart="175" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="rtos__hal_8h_1a814b53c3ddbffb90b3ecdca65dd00bce" prot="public" static="no">
        <name>HAL_CL_DMA_DIR_LOC2EXT</name>
        <initializer>RT_DMA_DIR_LOC2EXT</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/include/rtos_hal.h" line="176" column="9" bodyfile="/github/workspace/include/rtos_hal.h" bodystart="176" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="rtos__hal_8h_1a53565d048a6ac0164d81dbfb0539b01d" prot="public" static="no">
        <name>HAL_PERF_CYCLES</name>
        <initializer>RT_PERF_CYCLES</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/include/rtos_hal.h" line="195" column="9" bodyfile="/github/workspace/include/rtos_hal.h" bodystart="195" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="rtos__hal_8h_1a09ab9918fb722d2dc87d14a93803e0ac" prot="public" static="no">
        <name>HAL_PERF_ACTIVE_CYCLES</name>
        <initializer>RT_PERF_ACTIVE_CYCLES</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/include/rtos_hal.h" line="196" column="9" bodyfile="/github/workspace/include/rtos_hal.h" bodystart="196" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="rtos__hal_8h_1aebca4ab5d1e1f93245bd864ff3726942" prot="public" static="no">
        <name>HAL_PERF_INSTR</name>
        <initializer>RT_PERF_INSTR</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/include/rtos_hal.h" line="197" column="9" bodyfile="/github/workspace/include/rtos_hal.h" bodystart="197" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="rtos__hal_8h_1a98d34dc747472d7f3d2dcdc319a441c3" prot="public" static="no">
        <name>HAL_PERF_LD_STALL</name>
        <initializer>RT_PERF_LD_STALL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/include/rtos_hal.h" line="198" column="9" bodyfile="/github/workspace/include/rtos_hal.h" bodystart="198" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="rtos__hal_8h_1a87faacd53a82c2626be254bf1c5328ad" prot="public" static="no">
        <name>HAL_PERF_JR_STALL</name>
        <initializer>RT_PERF_JR_STALL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/include/rtos_hal.h" line="199" column="9" bodyfile="/github/workspace/include/rtos_hal.h" bodystart="199" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="rtos__hal_8h_1a59a6dd1c88665c651eb91986fe9c2160" prot="public" static="no">
        <name>HAL_PERF_IMISS</name>
        <initializer>RT_PERF_IMISS</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/include/rtos_hal.h" line="200" column="9" bodyfile="/github/workspace/include/rtos_hal.h" bodystart="200" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="rtos__hal_8h_1a26026e5cdee14413986d82bd6c75754b" prot="public" static="no">
        <name>HAL_PERF_WBRANCH</name>
        <initializer>RT_PERF_WBRANCH</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/include/rtos_hal.h" line="201" column="9" bodyfile="/github/workspace/include/rtos_hal.h" bodystart="201" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="rtos__hal_8h_1ade21298918e7cc4cd94a68ce144691b0" prot="public" static="no">
        <name>HAL_PERF_WBRANCH_CYC</name>
        <initializer>RT_PERF_WBRANCH_CYC</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/include/rtos_hal.h" line="202" column="9" bodyfile="/github/workspace/include/rtos_hal.h" bodystart="202" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="rtos__hal_8h_1aa38108a507ac995bbf44c337be0f1369" prot="public" static="no">
        <name>HAL_PERF_LD</name>
        <initializer>RT_PERF_LD</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/include/rtos_hal.h" line="203" column="9" bodyfile="/github/workspace/include/rtos_hal.h" bodystart="203" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="rtos__hal_8h_1a43dd02cdd05dd42f3ba829126ed6210c" prot="public" static="no">
        <name>HAL_PERF_ST</name>
        <initializer>RT_PERF_ST</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/include/rtos_hal.h" line="204" column="9" bodyfile="/github/workspace/include/rtos_hal.h" bodystart="204" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="rtos__hal_8h_1ac78f11cceaa8f8982977154b3d260e16" prot="public" static="no">
        <name>HAL_PERF_JUMP</name>
        <initializer>RT_PERF_JUMP</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/include/rtos_hal.h" line="205" column="9" bodyfile="/github/workspace/include/rtos_hal.h" bodystart="205" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="rtos__hal_8h_1abcfd70f382e269fdf823bfcc4b9f2b74" prot="public" static="no">
        <name>HAL_PERF_BRANCH</name>
        <initializer>RT_PERF_BRANCH</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/include/rtos_hal.h" line="206" column="9" bodyfile="/github/workspace/include/rtos_hal.h" bodystart="206" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="rtos__hal_8h_1a4f5872e7897903042c6e0b22a7fc3569" prot="public" static="no">
        <name>HAL_PERF_DELAY_NOP</name>
        <initializer>RT_PERF_DELAY_NOP</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/include/rtos_hal.h" line="207" column="9" bodyfile="/github/workspace/include/rtos_hal.h" bodystart="207" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="rtos__hal_8h_1a06833dcf98f75da85cd418bb99964802" prot="public" static="no">
        <name>HAL_PERF_LD_EXT_CYC</name>
        <initializer>RT_PERF_LD_EXT_CYC</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/include/rtos_hal.h" line="208" column="9" bodyfile="/github/workspace/include/rtos_hal.h" bodystart="208" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="rtos__hal_8h_1a554ff23a086b103a3afce9d9d7bc362e" prot="public" static="no">
        <name>HAL_PERF_ST_EXT_CYC</name>
        <initializer>RT_PERF_ST_EXT_CYC</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/include/rtos_hal.h" line="209" column="9" bodyfile="/github/workspace/include/rtos_hal.h" bodystart="209" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="rtos__hal_8h_1aac81e520221b53bbc505cab50ed8037a" prot="public" static="no">
        <name>HAL_PERF_TCDM_CONT</name>
        <initializer>RT_PERF_TCDM_CONT</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/include/rtos_hal.h" line="210" column="9" bodyfile="/github/workspace/include/rtos_hal.h" bodystart="210" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="rtos__hal_8h_1a24dad1da0675841e9eda3eb99c0056b4" prot="public" static="no">
        <type>rt_dma_copy_t</type>
        <definition>typedef rt_dma_copy_t hal_cl_dma_cmd_t</definition>
        <argsstring></argsstring>
        <name>hal_cl_dma_cmd_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/include/rtos_hal.h" line="178" column="23" bodyfile="/github/workspace/include/rtos_hal.h" bodystart="178" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="rtos__hal_8h_1a85624eba9b24020192c8b37e286f3e4f" prot="public" static="no">
        <type>rt_dma_dir_e</type>
        <definition>typedef rt_dma_dir_e hal_cl_dma_dir_e</definition>
        <argsstring></argsstring>
        <name>hal_cl_dma_dir_e</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/include/rtos_hal.h" line="180" column="22" bodyfile="/github/workspace/include/rtos_hal.h" bodystart="180" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="rtos__hal_8h_1a766f01b3349edf1c85d59e3f654bfd0d" prot="public" static="no">
        <type>rt_perf_t</type>
        <definition>typedef rt_perf_t hal_perf_t</definition>
        <argsstring></argsstring>
        <name>hal_perf_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/include/rtos_hal.h" line="212" column="19" bodyfile="/github/workspace/include/rtos_hal.h" bodystart="212" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="rtos__hal_8h_1ac50230fa60e991c78d592293c1f4ad2c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t hal_cl_nb_pe_cores</definition>
        <argsstring>()</argsstring>
        <name>hal_cl_nb_pe_cores</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/include/rtos_hal.h" line="134" column="24" bodyfile="/github/workspace/include/rtos_hal.h" bodystart="134" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="rtos__hal_8h_1a20afd2391f891676ba4757341c99bb3a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hal_team_barrier</definition>
        <argsstring>()</argsstring>
        <name>hal_team_barrier</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/include/rtos_hal.h" line="138" column="20" bodyfile="/github/workspace/include/rtos_hal.h" bodystart="138" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="rtos__hal_8h_1a11d38c72f811384b34fd4653ec90f876" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hal_cl_team_fork</definition>
        <argsstring>(int nb_cores, void(*entry)(void *), void *arg)</argsstring>
        <name>hal_cl_team_fork</name>
        <param>
          <type>int</type>
          <declname>nb_cores</declname>
        </param>
        <param>
          <type>void(*)(void *)</type>
          <declname>entry</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/include/rtos_hal.h" line="144" column="20" bodyfile="/github/workspace/include/rtos_hal.h" bodystart="144" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="rtos__hal_8h_1afd5dcbbe5a10e50a8b2496d299df2691" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void *</type>
        <definition>static void * hal_fc_l1_malloc</definition>
        <argsstring>(int size)</argsstring>
        <name>hal_fc_l1_malloc</name>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/include/rtos_hal.h" line="152" column="21" bodyfile="/github/workspace/include/rtos_hal.h" bodystart="152" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="rtos__hal_8h_1af803934776c1627a498f90f9038dff95" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hal_fc_l1_free</definition>
        <argsstring>(void *chunk, int size)</argsstring>
        <name>hal_fc_l1_free</name>
        <param>
          <type>void *</type>
          <declname>chunk</declname>
        </param>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/include/rtos_hal.h" line="157" column="20" bodyfile="/github/workspace/include/rtos_hal.h" bodystart="157" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="rtos__hal_8h_1a125f828483f28695eed504a84c36c610" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void *</type>
        <definition>static void * hal_cl_l1_malloc</definition>
        <argsstring>(int size)</argsstring>
        <name>hal_cl_l1_malloc</name>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/include/rtos_hal.h" line="162" column="21" bodyfile="/github/workspace/include/rtos_hal.h" bodystart="162" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="rtos__hal_8h_1a5b4d327f2f02442d44c34f76dc18fa36" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hal_cl_l1_free</definition>
        <argsstring>(void *chunk, int size)</argsstring>
        <name>hal_cl_l1_free</name>
        <param>
          <type>void *</type>
          <declname>chunk</declname>
        </param>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/include/rtos_hal.h" line="167" column="20" bodyfile="/github/workspace/include/rtos_hal.h" bodystart="167" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="rtos__hal_8h_1a4e1b6741f7f5ca44f247942a7456f276" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hal_cl_dma_cmd</definition>
        <argsstring>(uint32_t ext, uint32_t loc, uint32_t size, hal_cl_dma_dir_e dir, int merge, hal_cl_dma_cmd_t *cmd)</argsstring>
        <name>hal_cl_dma_cmd</name>
        <param>
          <type>uint32_t</type>
          <declname>ext</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>loc</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>hal_cl_dma_dir_e</type>
          <declname>dir</declname>
        </param>
        <param>
          <type>int</type>
          <declname>merge</declname>
        </param>
        <param>
          <type>hal_cl_dma_cmd_t *</type>
          <declname>cmd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/include/rtos_hal.h" line="182" column="20" bodyfile="/github/workspace/include/rtos_hal.h" bodystart="182" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="rtos__hal_8h_1a510c1682f081c38e7895481988b8ed76" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hal_cl_dma_cmd_wait</definition>
        <argsstring>(hal_cl_dma_cmd_t *cmd)</argsstring>
        <name>hal_cl_dma_cmd_wait</name>
        <param>
          <type>hal_cl_dma_cmd_t *</type>
          <declname>cmd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/include/rtos_hal.h" line="187" column="20" bodyfile="/github/workspace/include/rtos_hal.h" bodystart="187" bodyend="190"/>
      </memberdef>
      <memberdef kind="function" id="rtos__hal_8h_1a3bf03f334ad8e7505ae58686e44b0bde" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hal_perf_init</definition>
        <argsstring>(hal_perf_t *perf)</argsstring>
        <name>hal_perf_init</name>
        <param>
          <type>hal_perf_t *</type>
          <declname>perf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/include/rtos_hal.h" line="214" column="20" bodyfile="/github/workspace/include/rtos_hal.h" bodystart="214" bodyend="217"/>
      </memberdef>
      <memberdef kind="function" id="rtos__hal_8h_1a0acd945ddb0753e9b7e3d6099bd84236" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hal_perf_conf</definition>
        <argsstring>(hal_perf_t *perf, unsigned events)</argsstring>
        <name>hal_perf_conf</name>
        <param>
          <type>hal_perf_t *</type>
          <declname>perf</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>events</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/include/rtos_hal.h" line="219" column="20" bodyfile="/github/workspace/include/rtos_hal.h" bodystart="219" bodyend="222"/>
      </memberdef>
      <memberdef kind="function" id="rtos__hal_8h_1a2c927b839223b6bfd6a190550182e464" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hal_perf_reset</definition>
        <argsstring>(hal_perf_t *perf)</argsstring>
        <name>hal_perf_reset</name>
        <param>
          <type>hal_perf_t *</type>
          <declname>perf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/include/rtos_hal.h" line="224" column="20" bodyfile="/github/workspace/include/rtos_hal.h" bodystart="224" bodyend="227"/>
      </memberdef>
      <memberdef kind="function" id="rtos__hal_8h_1a5efecb875a83a8c7aa77c009184c9e4d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hal_perf_start</definition>
        <argsstring>(hal_perf_t *perf)</argsstring>
        <name>hal_perf_start</name>
        <param>
          <type>hal_perf_t *</type>
          <declname>perf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/include/rtos_hal.h" line="229" column="20" bodyfile="/github/workspace/include/rtos_hal.h" bodystart="229" bodyend="232"/>
      </memberdef>
      <memberdef kind="function" id="rtos__hal_8h_1aee4f3841cd40b5a53c180785b1cbd4ba" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void hal_perf_stop</definition>
        <argsstring>(hal_perf_t *perf)</argsstring>
        <name>hal_perf_stop</name>
        <param>
          <type>hal_perf_t *</type>
          <declname>perf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/include/rtos_hal.h" line="235" column="20" bodyfile="/github/workspace/include/rtos_hal.h" bodystart="235" bodyend="238"/>
      </memberdef>
      <memberdef kind="function" id="rtos__hal_8h_1a5c64144aae83499e5e2c897efa6479d9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned int</type>
        <definition>static unsigned int hal_perf_read</definition>
        <argsstring>(int id)</argsstring>
        <name>hal_perf_read</name>
        <param>
          <type>int</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/include/rtos_hal.h" line="240" column="28" bodyfile="/github/workspace/include/rtos_hal.h" bodystart="240" bodyend="243"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>_RTOS_HAL_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_RTOS_HAL_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>RTOS_PMSIS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pmsis.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HAL_L1<sp/>PI_CL_L1<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HAL_CL_L1<sp/>PI_CL_L1<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HAL_L2<sp/>PI_L2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint32_t<sp/>hal_cl_nb_pe_cores(){</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pi_cl_cluster_nb_pe_cores();</highlight></codeline>
<codeline lineno="14"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>hal_team_barrier()</highlight></codeline>
<codeline lineno="17"><highlight class="normal">{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/>pi_cl_team_barrier(0);<sp/></highlight></codeline>
<codeline lineno="19"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>hal_cl_team_fork(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nb_cores,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*entry)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*),<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*arg)</highlight></codeline>
<codeline lineno="22"><highlight class="normal">{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/>pi_cl_team_fork(nb_cores,<sp/>entry,<sp/>arg);</highlight></codeline>
<codeline lineno="24"><highlight class="normal">}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>MEMORY<sp/>ALLOCATION<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>hal_fc_l1_malloc(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size)</highlight></codeline>
<codeline lineno="30"><highlight class="normal">{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pi_fc_l1_malloc(size);</highlight></codeline>
<codeline lineno="32"><highlight class="normal">}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>hal_fc_l1_free(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*chunk,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size)</highlight></codeline>
<codeline lineno="35"><highlight class="normal">{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>pi_fc_l1_free(chunk,<sp/>size);</highlight></codeline>
<codeline lineno="37"><highlight class="normal">}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>hal_cl_l1_malloc(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size)</highlight></codeline>
<codeline lineno="40"><highlight class="normal">{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pi_cl_l1_malloc(0,<sp/>size);</highlight></codeline>
<codeline lineno="42"><highlight class="normal">}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>hal_cl_l1_free(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*chunk,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size)</highlight></codeline>
<codeline lineno="45"><highlight class="normal">{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>pi_cl_l1_free(0,<sp/>chunk,<sp/>size);</highlight></codeline>
<codeline lineno="47"><highlight class="normal">}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>DMA<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HAL_CL_DMA_DIR_EXT2LOC<sp/>PI_CL_DMA_DIR_EXT2LOC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HAL_CL_DMA_DIR_LOC2EXT<sp/>PI_CL_DMA_DIR_LOC2EXT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>pi_cl_dma_cmd_t<sp/>hal_cl_dma_cmd_t;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>pi_cl_dma_dir_e<sp/>hal_cl_dma_dir_e;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>hal_cl_dma_cmd(uint32_t<sp/>ext,<sp/>uint32_t<sp/>loc,<sp/>uint32_t<sp/>size,<sp/>hal_cl_dma_dir_e<sp/>dir,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>merge<sp/>__attribute__((unused)),<sp/>hal_cl_dma_cmd_t<sp/>*<sp/>cmd)</highlight></codeline>
<codeline lineno="60"><highlight class="normal">{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>pi_cl_dma_cmd(ext,<sp/>loc,<sp/>size,<sp/>dir,<sp/>cmd);</highlight></codeline>
<codeline lineno="62"><highlight class="normal">}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>hal_cl_dma_cmd_wait(hal_cl_dma_cmd_t<sp/>*<sp/>cmd)</highlight></codeline>
<codeline lineno="65"><highlight class="normal">{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>pi_cl_dma_cmd_wait(cmd);</highlight></codeline>
<codeline lineno="67"><highlight class="normal">}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>PERFORMANCE<sp/>COUNTERS<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HAL_PERF_CYCLES<sp/>PI_PERF_CYCLES</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HAL_PERF_ACTIVE_CYCLES<sp/>PI_PERF_ACTIVE_CYCLES</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HAL_PERF_INSTR<sp/>PI_PERF_INSTR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HAL_PERF_LD_STALL<sp/>PI_PERF_LD_STALL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HAL_PERF_JR_STALL<sp/>PI_PERF_JR_STALL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HAL_PERF_IMISS<sp/>PI_PERF_IMISS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HAL_PERF_WBRANCH<sp/>PI_PERF_WBRANCH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HAL_PERF_WBRANCH_CYC<sp/>PI_PERF_WBRANCH_CYC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HAL_PERF_LD<sp/>PI_PERF_LD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HAL_PERF_ST<sp/>PI_PERF_ST</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HAL_PERF_JUMP<sp/>PI_PERF_JUMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HAL_PERF_BRANCH<sp/>PI_PERF_BRANCH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HAL_PERF_DELAY_NOP<sp/>PI_PERF_DELAY_NOP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HAL_PERF_LD_EXT_CYC<sp/>PI_PERF_LD_EXT_CYC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HAL_PERF_ST_EXT_CYC<sp/>PI_PERF_ST_EXT_CYC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HAL_PERF_TCDM_CONT<sp/>PI_PERF_TCDM_CONT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hal_perf_t;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>hal_perf_init(hal_perf_t<sp/>*<sp/>perf<sp/>__attribute__((unused)))</highlight></codeline>
<codeline lineno="93"><highlight class="normal">{</highlight></codeline>
<codeline lineno="94"><highlight class="normal">}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>hal_perf_conf(hal_perf_t<sp/>*<sp/>perf<sp/>__attribute__((unused)),<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>events)</highlight></codeline>
<codeline lineno="97"><highlight class="normal">{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>pi_perf_conf(events);</highlight></codeline>
<codeline lineno="99"><highlight class="normal">}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>hal_perf_reset(hal_perf_t<sp/>*<sp/>perf<sp/>__attribute__((unused)))</highlight></codeline>
<codeline lineno="102"><highlight class="normal">{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>pi_perf_reset();</highlight></codeline>
<codeline lineno="104"><highlight class="normal">}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>hal_perf_start(hal_perf_t<sp/>*<sp/>perf<sp/>__attribute__((unused)))</highlight></codeline>
<codeline lineno="107"><highlight class="normal">{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/>pi_perf_start();</highlight></codeline>
<codeline lineno="109"><highlight class="normal">}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>hal_perf_stop(hal_perf_t<sp/>*<sp/>perf<sp/>__attribute__((unused)))</highlight></codeline>
<codeline lineno="113"><highlight class="normal">{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>pi_perf_stop();</highlight></codeline>
<codeline lineno="115"><highlight class="normal">}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hal_perf_read(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="118"><highlight class="normal">{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pi_perf_read(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="120"><highlight class="normal">}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/></highlight><highlight class="comment">/*<sp/>PULP-RT<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;rt/rt_api.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HAL_L1<sp/>RT_CL_DATA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HAL_CL_L1<sp/>RT_CL_DATA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HAL_L2<sp/>RT_L2_DATA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint32_t<sp/>hal_cl_nb_pe_cores(){</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rt_nb_pe();</highlight></codeline>
<codeline lineno="136"><highlight class="normal">}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>hal_team_barrier()</highlight></codeline>
<codeline lineno="139"><highlight class="normal">{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/>rt_team_barrier();</highlight></codeline>
<codeline lineno="141"><highlight class="normal">}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>hal_cl_team_fork(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nb_cores,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*entry)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*),<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*arg)</highlight></codeline>
<codeline lineno="145"><highlight class="normal">{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/>rt_team_fork(nb_cores,<sp/>entry,<sp/>arg);</highlight></codeline>
<codeline lineno="147"><highlight class="normal">}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>MEMORY<sp/>ALLOCATION<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>hal_fc_l1_malloc(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size)</highlight></codeline>
<codeline lineno="153"><highlight class="normal">{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rt_alloc(RT_ALLOC_FC_DATA,<sp/>size);</highlight></codeline>
<codeline lineno="155"><highlight class="normal">}<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>hal_fc_l1_free(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*chunk,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size)</highlight></codeline>
<codeline lineno="158"><highlight class="normal">{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/>rt_free(RT_ALLOC_FC_DATA,<sp/>chunk,<sp/>size);</highlight></codeline>
<codeline lineno="160"><highlight class="normal">}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>hal_cl_l1_malloc(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size)</highlight></codeline>
<codeline lineno="163"><highlight class="normal">{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rt_alloc(RT_ALLOC_CL_DATA,<sp/>size);</highlight></codeline>
<codeline lineno="165"><highlight class="normal">}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>hal_cl_l1_free(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*chunk,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size)</highlight></codeline>
<codeline lineno="168"><highlight class="normal">{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/>rt_free(RT_ALLOC_CL_DATA,<sp/>chunk,<sp/>size);</highlight></codeline>
<codeline lineno="170"><highlight class="normal">}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>DMA<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HAL_CL_DMA_DIR_EXT2LOC<sp/>RT_DMA_DIR_EXT2LOC<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HAL_CL_DMA_DIR_LOC2EXT<sp/>RT_DMA_DIR_LOC2EXT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>rt_dma_copy_t<sp/>hal_cl_dma_cmd_t;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>rt_dma_dir_e<sp/>hal_cl_dma_dir_e;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>hal_cl_dma_cmd(uint32_t<sp/>ext,<sp/>uint32_t<sp/>loc,<sp/>uint32_t<sp/>size,<sp/>hal_cl_dma_dir_e<sp/>dir,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>merge,<sp/>hal_cl_dma_cmd_t<sp/>*<sp/>cmd)</highlight></codeline>
<codeline lineno="183"><highlight class="normal">{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/>rt_dma_memcpy(ext,<sp/>loc,<sp/>size,<sp/>dir,<sp/>merge,<sp/>cmd);</highlight></codeline>
<codeline lineno="185"><highlight class="normal">}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>hal_cl_dma_cmd_wait(hal_cl_dma_cmd_t<sp/>*<sp/>cmd)</highlight></codeline>
<codeline lineno="188"><highlight class="normal">{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/>rt_dma_wait(cmd);</highlight></codeline>
<codeline lineno="190"><highlight class="normal">}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>PERFORMANCE<sp/>COUNTERS<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HAL_PERF_CYCLES<sp/>RT_PERF_CYCLES</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HAL_PERF_ACTIVE_CYCLES<sp/>RT_PERF_ACTIVE_CYCLES</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HAL_PERF_INSTR<sp/>RT_PERF_INSTR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HAL_PERF_LD_STALL<sp/>RT_PERF_LD_STALL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HAL_PERF_JR_STALL<sp/>RT_PERF_JR_STALL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HAL_PERF_IMISS<sp/>RT_PERF_IMISS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HAL_PERF_WBRANCH<sp/>RT_PERF_WBRANCH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HAL_PERF_WBRANCH_CYC<sp/>RT_PERF_WBRANCH_CYC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HAL_PERF_LD<sp/>RT_PERF_LD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HAL_PERF_ST<sp/>RT_PERF_ST</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HAL_PERF_JUMP<sp/>RT_PERF_JUMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HAL_PERF_BRANCH<sp/>RT_PERF_BRANCH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HAL_PERF_DELAY_NOP<sp/>RT_PERF_DELAY_NOP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HAL_PERF_LD_EXT_CYC<sp/>RT_PERF_LD_EXT_CYC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HAL_PERF_ST_EXT_CYC<sp/>RT_PERF_ST_EXT_CYC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HAL_PERF_TCDM_CONT<sp/>RT_PERF_TCDM_CONT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>rt_perf_t<sp/>hal_perf_t;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>hal_perf_init(hal_perf_t<sp/>*<sp/>perf)</highlight></codeline>
<codeline lineno="215"><highlight class="normal">{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/>rt_perf_init(perf);</highlight></codeline>
<codeline lineno="217"><highlight class="normal">}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>hal_perf_conf(hal_perf_t<sp/>*<sp/>perf,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>events)</highlight></codeline>
<codeline lineno="220"><highlight class="normal">{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/>rt_perf_conf(perf,<sp/>events);</highlight></codeline>
<codeline lineno="222"><highlight class="normal">}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>hal_perf_reset(hal_perf_t<sp/>*<sp/>perf)</highlight></codeline>
<codeline lineno="225"><highlight class="normal">{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/>rt_perf_reset(perf);</highlight></codeline>
<codeline lineno="227"><highlight class="normal">}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>hal_perf_start(hal_perf_t<sp/>*<sp/>perf)</highlight></codeline>
<codeline lineno="230"><highlight class="normal">{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/>rt_perf_start(perf);</highlight></codeline>
<codeline lineno="232"><highlight class="normal">}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>hal_perf_stop(hal_perf_t<sp/>*<sp/>perf)</highlight></codeline>
<codeline lineno="236"><highlight class="normal">{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/>rt_perf_stop(perf);</highlight></codeline>
<codeline lineno="238"><highlight class="normal">}</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hal_perf_read(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="241"><highlight class="normal">{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rt_perf_read(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="243"><highlight class="normal">}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>PULP-RT<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/github/workspace/include/rtos_hal.h"/>
  </compounddef>
</doxygen>
