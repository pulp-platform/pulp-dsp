<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="group__BasicAddKernels" kind="group">
    <compoundname>BasicAddKernels</compoundname>
    <title>Vector Addition Kernels</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__BasicAddKernels_1gae44046e04bbf60a74ff38f6a65e9e505" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void plp_add_i16s_rv32im</definition>
        <argsstring>(const int16_t *pSrcA, const int16_t *pSrcB, int32_t *pDst, uint32_t blockSize)</argsstring>
        <name>plp_add_i16s_rv32im</name>
        <param>
          <type>const int16_t *</type>
          <declname>pSrcA</declname>
        </param>
        <param>
          <type>const int16_t *</type>
          <declname>pSrcB</declname>
        </param>
        <param>
          <type>int32_t *</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>Element-by-element addition of 16-bit integer vectors kernel for RV32IM extension. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrcA</parametername>
</parameternamelist>
<parameterdescription>
<para>points to first input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pSrcB</parametername>
</parameternamelist>
<parameterdescription>
<para>points to second input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to output vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>number of samples in each vector </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>none </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/src/BasicMathFunctions/add/kernels/plp_add_i16s_rv32im.c" line="57" column="6" bodyfile="/github/workspace/src/BasicMathFunctions/add/kernels/plp_add_i16s_rv32im.c" bodystart="57" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="group__BasicAddKernels_1gad8dfb134ef72040a86bb50def8b103b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void plp_add_i16s_xpulpv2</definition>
        <argsstring>(const int16_t *pSrcA, const int16_t *pSrcB, int32_t *pDst, uint32_t blockSize)</argsstring>
        <name>plp_add_i16s_xpulpv2</name>
        <param>
          <type>const int16_t *</type>
          <declname>pSrcA</declname>
        </param>
        <param>
          <type>const int16_t *</type>
          <declname>pSrcB</declname>
        </param>
        <param>
          <type>int32_t *</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>Element-by-element addition of 16-bit integer vectors kernel for XPULPV2 extension. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrcA</parametername>
</parameternamelist>
<parameterdescription>
<para>points to first input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pSrcB</parametername>
</parameternamelist>
<parameterdescription>
<para>points to second input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to output vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>number of samples in each vector </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>none </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/src/BasicMathFunctions/add/kernels/plp_add_i16s_xpulpv2.c" line="57" column="6" bodyfile="/github/workspace/src/BasicMathFunctions/add/kernels/plp_add_i16s_xpulpv2.c" bodystart="57" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="group__BasicAddKernels_1gabcb936aa012748a018c940428f28e385" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void plp_add_i32s_rv32im</definition>
        <argsstring>(const int32_t *pSrcA, const int32_t *pSrcB, int32_t *pDst, uint32_t blockSize)</argsstring>
        <name>plp_add_i32s_rv32im</name>
        <param>
          <type>const int32_t *</type>
          <declname>pSrcA</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>pSrcB</declname>
        </param>
        <param>
          <type>int32_t *</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>Element-by-element addition of 32-bit integer vectors kernel for RV32IM extension. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrcA</parametername>
</parameternamelist>
<parameterdescription>
<para>points to first input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pSrcB</parametername>
</parameternamelist>
<parameterdescription>
<para>points to second input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to output vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>number of samples in each vector </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>none </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/src/BasicMathFunctions/add/kernels/plp_add_i32s_rv32im.c" line="86" column="6" bodyfile="/github/workspace/src/BasicMathFunctions/add/kernels/plp_add_i32s_rv32im.c" bodystart="86" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="group__BasicAddKernels_1ga61e211b11da70d2d371e07d89c830ceb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void plp_add_i32s_xpulpv2</definition>
        <argsstring>(const int32_t *pSrcA, const int32_t *pSrcB, int32_t *pDst, uint32_t blockSize)</argsstring>
        <name>plp_add_i32s_xpulpv2</name>
        <param>
          <type>const int32_t *</type>
          <declname>pSrcA</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>pSrcB</declname>
        </param>
        <param>
          <type>int32_t *</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>Element-by-element addition of 32-bit integer vectors kernel for XPULPV2 extension. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrcA</parametername>
</parameternamelist>
<parameterdescription>
<para>points to first input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pSrcB</parametername>
</parameternamelist>
<parameterdescription>
<para>points to second input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to output vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>number of samples in each vector </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>none </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/src/BasicMathFunctions/add/kernels/plp_add_i32s_xpulpv2.c" line="57" column="6" bodyfile="/github/workspace/src/BasicMathFunctions/add/kernels/plp_add_i32s_xpulpv2.c" bodystart="57" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="group__BasicAddKernels_1ga4292f49ba6ecddea608e0920b24e90b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void plp_add_i8s_rv32im</definition>
        <argsstring>(const int8_t *pSrcA, const int8_t *pSrcB, int32_t *pDst, uint32_t blockSize)</argsstring>
        <name>plp_add_i8s_rv32im</name>
        <param>
          <type>const int8_t *</type>
          <declname>pSrcA</declname>
        </param>
        <param>
          <type>const int8_t *</type>
          <declname>pSrcB</declname>
        </param>
        <param>
          <type>int32_t *</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>Element-by-element addition of 8-bit integer vectors kernel for RV32IM extension. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrcA</parametername>
</parameternamelist>
<parameterdescription>
<para>points to first input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pSrcB</parametername>
</parameternamelist>
<parameterdescription>
<para>points to second input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to output vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>number of samples in each vector </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>none </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/src/BasicMathFunctions/add/kernels/plp_add_i8s_rv32im.c" line="57" column="6" bodyfile="/github/workspace/src/BasicMathFunctions/add/kernels/plp_add_i8s_rv32im.c" bodystart="57" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="group__BasicAddKernels_1ga52ae9b08af9fcb50e7abc170f3173945" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void plp_add_i8s_xpulpv2</definition>
        <argsstring>(const int8_t *pSrcA, const int8_t *pSrcB, int32_t *pDst, uint32_t blockSize)</argsstring>
        <name>plp_add_i8s_xpulpv2</name>
        <param>
          <type>const int8_t *</type>
          <declname>pSrcA</declname>
        </param>
        <param>
          <type>const int8_t *</type>
          <declname>pSrcB</declname>
        </param>
        <param>
          <type>int32_t *</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>Element-by-element addition of 8-bit integer vectors kernel for XPULPV2 extension. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrcA</parametername>
</parameternamelist>
<parameterdescription>
<para>points to first input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pSrcB</parametername>
</parameternamelist>
<parameterdescription>
<para>points to second input vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to output vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>number of samples in each vector </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>none </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/src/BasicMathFunctions/add/kernels/plp_add_i8s_xpulpv2.c" line="57" column="6" bodyfile="/github/workspace/src/BasicMathFunctions/add/kernels/plp_add_i8s_xpulpv2.c" bodystart="57" bodyend="101"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>The Vector Addition computes element-by-element addition of two vectors.</para>
<para><preformatted>
pDst[n] = pSrcA[n] + pSrcB[n],   0 &lt;= n &lt; blockSize.
</preformatted></para>
<para>There are separate functions for floating point, integer, and fixed point 32- 16- 8-bit data types. For lower precision integers (16- and 8-bit), functions exploiting SIMD instructions are provided.</para>
<para>The naming scheme of the functions follows the following pattern (for example plp_dot_prod_i32s): <preformatted>
&lt;pulp&gt; _ &lt;function name&gt; _ &lt;data type&gt; &lt;precision&gt; &lt;method&gt; _ &lt;isa extension&gt;, with

data type = {f, i, q} respectively for floats, integers, fixed points

precision = {32, 16, 8} bits

method = {s, p} respectively meaning single core or parallel multicore implementation.

isa extension = rv32im, xpulpv2, etc. of which rv32im is the most general one.

</preformatted> </para>
    </detaileddescription>
  </compounddef>
</doxygen>
