<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="plp__cfft__q32s__xpulpv2_8c" kind="file" language="C++">
    <compoundname>plp_cfft_q32s_xpulpv2.c</compoundname>
    <includes refid="plp__math_8h" local="yes">plp_math.h</includes>
    <incdepgraph>
      <node id="2">
        <label>plp_math.h</label>
        <link refid="plp__math_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>rtos_hal.h</label>
        <link refid="rtos__hal_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/github/workspace/src/TransformFunctions/kernels/plp_cfft_q32s_xpulpv2.c</label>
        <link refid="plp__cfft__q32s__xpulpv2_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>math.h</label>
      </node>
      <node id="5">
        <label>rt/rt_api.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__fft_1gaba3e538352fc7f9d6d15f9a18d469399" prot="public" static="no">
        <name>multAcc_32x32_keep32_R</name>
        <param><defname>a</defname></param>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer>	a = (int32_t) (((((int64_t) a) &lt;&lt; 32) + ((int64_t) x * y) + 0x80000000LL ) &gt;&gt; 32)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/src/TransformFunctions/kernels/plp_cfft_q32s_xpulpv2.c" line="42" column="9" bodyfile="/github/workspace/src/TransformFunctions/kernels/plp_cfft_q32s_xpulpv2.c" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__fft_1ga668fbf1cd1c3bc8faf1b1c83964ade23" prot="public" static="no">
        <name>multSub_32x32_keep32_R</name>
        <param><defname>a</defname></param>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer>	a = (int32_t) (((((int64_t) a) &lt;&lt; 32) - ((int64_t) x * y) + 0x80000000LL ) &gt;&gt; 32)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/src/TransformFunctions/kernels/plp_cfft_q32s_xpulpv2.c" line="45" column="9" bodyfile="/github/workspace/src/TransformFunctions/kernels/plp_cfft_q32s_xpulpv2.c" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__fft_1ga960f210642058d2b3d5368729a6e8375" prot="public" static="no">
        <name>mult_32x32_keep32_R</name>
        <param><defname>a</defname></param>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer>	a = (int32_t) (((int64_t) x * y + 0x80000000LL ) &gt;&gt; 32)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/src/TransformFunctions/kernels/plp_cfft_q32s_xpulpv2.c" line="48" column="9" bodyfile="/github/workspace/src/TransformFunctions/kernels/plp_cfft_q32s_xpulpv2.c" bodystart="48" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="plp__cfft__q32s__xpulpv2_8c_1ga5559175c84c4a6cf24350ea0580cee9a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void plp_cfft_radix4by2_q32</definition>
        <argsstring>(int32_t *pSrc, uint32_t fftLen, const int32_t *pCoef)</argsstring>
        <name>plp_cfft_radix4by2_q32</name>
        <param>
          <type>int32_t *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>fftLen</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>pCoef</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/src/TransformFunctions/kernels/plp_cfft_q32s_xpulpv2.c" line="52" column="13" bodyfile="/github/workspace/src/TransformFunctions/kernels/plp_cfft_q32s_xpulpv2.c" bodystart="99" bodyend="153" declfile="/github/workspace/src/TransformFunctions/kernels/plp_cfft_q32s_xpulpv2.c" declline="52" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="plp__cfft__q32s__xpulpv2_8c_1gac2ee5bd7072404ef36f81cba2b04fba5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void plp_radix4_butterfly_q32</definition>
        <argsstring>(int32_t *pSrc, uint32_t fftLen, int32_t *pCoef, uint32_t twidCoefModifier)</argsstring>
        <name>plp_radix4_butterfly_q32</name>
        <param>
          <type>int32_t *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>fftLen</declname>
        </param>
        <param>
          <type>int32_t *</type>
          <declname>pCoef</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>twidCoefModifier</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/src/TransformFunctions/kernels/plp_cfft_q32s_xpulpv2.c" line="54" column="13" bodyfile="/github/workspace/src/TransformFunctions/kernels/plp_cfft_q32s_xpulpv2.c" bodystart="155" bodyend="473" declfile="/github/workspace/src/TransformFunctions/kernels/plp_cfft_q32s_xpulpv2.c" declline="54" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__fft_1ga4507899adff450b780692b20de28f60a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void plp_cfft_q32s_xpulpv2</definition>
        <argsstring>(const plp_cfft_instance_q32 *S, int32_t *p1, uint8_t ifftFlag, uint8_t bitReverseFlag, uint32_t fracBits)</argsstring>
        <name>plp_cfft_q32s_xpulpv2</name>
        <param>
          <type>const <ref refid="structplp__cfft__instance__q32" kindref="compound">plp_cfft_instance_q32</ref> *</type>
          <declname>S</declname>
        </param>
        <param>
          <type>int32_t *</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>ifftFlag</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>bitReverseFlag</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>fracBits</declname>
        </param>
        <briefdescription>
<para>Quantized 32-bit complex fast fourier transform for XPULPV2. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">S</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of the 32bit quantized CFFT structure </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p1</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the complex data buffer of size <computeroutput>2*fftLen</computeroutput>. Processing occurs in-place. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ifftFlag</parametername>
</parameternamelist>
<parameterdescription>
<para>flag that selects forwart (ifftFlag=0) or inverse (ifftFlag=1) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bitReverseFlag</parametername>
</parameternamelist>
<parameterdescription>
<para>flag that enables (bitReverseFlag=1) of disables (bitReverseFlag=0) bit reversal of output. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">fracBits</parametername>
</parameternamelist>
<parameterdescription>
<para>decimal point for right shift (input format Q(32-fracBits).fracBits) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/src/TransformFunctions/kernels/plp_cfft_q32s_xpulpv2.c" line="70" column="6" bodyfile="/github/workspace/src/TransformFunctions/kernels/plp_cfft_q32s_xpulpv2.c" bodystart="70" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="group__fft_1ga5559175c84c4a6cf24350ea0580cee9a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void plp_cfft_radix4by2_q32</definition>
        <argsstring>(int32_t *pSrc, uint32_t fftLen, const int32_t *pCoef)</argsstring>
        <name>plp_cfft_radix4by2_q32</name>
        <param>
          <type>int32_t *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>fftLen</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>pCoef</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/src/TransformFunctions/kernels/plp_cfft_q32s_rv32im.c" line="99" column="6" bodyfile="/github/workspace/src/TransformFunctions/kernels/plp_cfft_q32s_rv32im.c" bodystart="99" bodyend="153" declfile="/github/workspace/src/TransformFunctions/kernels/plp_cfft_q32s_rv32im.c" declline="52" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group__fft_1gac2ee5bd7072404ef36f81cba2b04fba5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void plp_radix4_butterfly_q32</definition>
        <argsstring>(int32_t *pSrc, uint32_t fftLen, int32_t *pCoef, uint32_t twidCoefModifier)</argsstring>
        <name>plp_radix4_butterfly_q32</name>
        <param>
          <type>int32_t *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>fftLen</declname>
        </param>
        <param>
          <type>int32_t *</type>
          <declname>pCoef</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>twidCoefModifier</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/github/workspace/src/TransformFunctions/kernels/plp_cfft_q32s_rv32im.c" line="155" column="6" bodyfile="/github/workspace/src/TransformFunctions/kernels/plp_cfft_q32s_rv32im.c" bodystart="155" bodyend="473" declfile="/github/workspace/src/TransformFunctions/kernels/plp_cfft_q32s_rv32im.c" declline="54" declcolumn="13"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>=====================================================================</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Project:<sp/><sp/><sp/><sp/><sp/><sp/>PULP<sp/>DSP<sp/>Library</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Title:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plp_cfft_q32s_xpulpv2.c</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Description:<sp/><sp/>32-bit<sp/>fixed<sp/>point<sp/>Fast<sp/>Fourier<sp/>Transform<sp/>on<sp/>Compled<sp/>Input<sp/>Data</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>$Date:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>30.<sp/>July<sp/>2020</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>$Revision:<sp/><sp/><sp/><sp/>V0</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>Target<sp/>Processor:<sp/>PULP<sp/>cores</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>=====================================================================<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>2020<sp/>ETH<sp/>Zurich<sp/>and<sp/>University<sp/>of<sp/>Bologna.<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>Author:<sp/>Michael<sp/>Rogenmoser,<sp/>ETH<sp/>Zurich</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>Apache-2.0</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>License);<sp/>you<sp/>may</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>AS<sp/>IS<sp/>BASIS,<sp/>WITHOUT</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="plp__math_8h" kindref="compound">plp_math.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>multAcc_32x32_keep32_R(a,<sp/>x,<sp/>y)<sp/>\</highlight></codeline>
<codeline lineno="43"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>a<sp/>=<sp/>(int32_t)<sp/>(((((int64_t)<sp/>a)<sp/>&lt;&lt;<sp/>32)<sp/>+<sp/>((int64_t)<sp/>x<sp/>*<sp/>y)<sp/>+<sp/>0x80000000LL<sp/>)<sp/>&gt;&gt;<sp/>32)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>multSub_32x32_keep32_R(a,<sp/>x,<sp/>y)<sp/>\</highlight></codeline>
<codeline lineno="46"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>a<sp/>=<sp/>(int32_t)<sp/>(((((int64_t)<sp/>a)<sp/>&lt;&lt;<sp/>32)<sp/>-<sp/>((int64_t)<sp/>x<sp/>*<sp/>y)<sp/>+<sp/>0x80000000LL<sp/>)<sp/>&gt;&gt;<sp/>32)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>mult_32x32_keep32_R(a,<sp/>x,<sp/>y)<sp/>\</highlight></codeline>
<codeline lineno="49"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>a<sp/>=<sp/>(int32_t)<sp/>(((int64_t)<sp/>x<sp/>*<sp/>y<sp/>+<sp/>0x80000000LL<sp/>)<sp/>&gt;&gt;<sp/>32)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>plp_cfft_radix4by2_q32(int32_t<sp/>*pSrc,<sp/>uint32_t<sp/>fftLen,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>*pCoef);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>plp_radix4_butterfly_q32(int32_t<sp/>*pSrc,</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>fftLen,</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>*pCoef,</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>twidCoefModifier);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__fft_1ga4507899adff450b780692b20de28f60a" kindref="member">plp_cfft_q32s_xpulpv2</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structplp__cfft__instance__q32" kindref="compound">plp_cfft_instance_q32</ref><sp/>*S,</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/>*p1,</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>ifftFlag,</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>bitReverseFlag,</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>fracBits){</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>L<sp/>=<sp/>S-&gt;fftLen;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ifftFlag<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(L)<sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>16:</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>64:</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>256:</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1024:</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>4096:</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plp_radix4_butterfly_q32(p1,<sp/>L,<sp/>(int32_t<sp/>*)S-&gt;pTwiddle,<sp/>1);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>32:</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>128:</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>512:</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2048:</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plp_cfft_radix4by2_q32(p1,<sp/>L,<sp/>(int32_t<sp/>*)S-&gt;pTwiddle);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bitReverseFlag)</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__fft_1gad890fbbc11c24ba7d1d1e8c2390c37b2" kindref="member">plp_bitreversal_32s_xpulpv2</ref>((uint32_t<sp/>*)p1,<sp/>S-&gt;bitRevLength,<sp/>S-&gt;pBitRevTable);</highlight></codeline>
<codeline lineno="97"><highlight class="normal">}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>plp_cfft_radix4by2_q32(int32_t<sp/>*pSrc,<sp/>uint32_t<sp/>fftLen,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>*pCoef){</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>i,<sp/>l;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>n2;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>xt,<sp/>yt,<sp/>cosVal,<sp/>sinVal;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>p0,<sp/>p1;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>n2<sp/>=<sp/>fftLen<sp/>&gt;&gt;<sp/>1U;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n2;<sp/>i++)</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cosVal<sp/>=<sp/>pCoef[2<sp/>*<sp/>i];</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sinVal<sp/>=<sp/>pCoef[2<sp/>*<sp/>i<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>l<sp/>=<sp/>i<sp/>+<sp/>n2;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xt<sp/>=<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(pSrc[2<sp/>*<sp/>i]<sp/>&gt;&gt;<sp/>2U)<sp/>-<sp/>(pSrc[2<sp/>*<sp/>l]<sp/>&gt;&gt;<sp/>2U);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSrc[2<sp/>*<sp/>i]<sp/>=<sp/>(pSrc[2<sp/>*<sp/>i]<sp/>&gt;&gt;<sp/>2U)<sp/>+<sp/>(pSrc[2<sp/>*<sp/>l]<sp/>&gt;&gt;<sp/>2U);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yt<sp/>=<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(pSrc[2<sp/>*<sp/>i<sp/>+<sp/>1]<sp/>&gt;&gt;<sp/>2U)<sp/>-<sp/>(pSrc[2<sp/>*<sp/>l<sp/>+<sp/>1]<sp/>&gt;&gt;<sp/>2U);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSrc[2<sp/>*<sp/>i<sp/>+<sp/>1]<sp/>=<sp/>(pSrc[2<sp/>*<sp/>l<sp/>+<sp/>1]<sp/>&gt;&gt;<sp/>2U)<sp/>+<sp/>(pSrc[2<sp/>*<sp/>i<sp/>+<sp/>1]<sp/>&gt;&gt;<sp/>2U);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mult_32x32_keep32_R(p0,<sp/>xt,<sp/>cosVal);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mult_32x32_keep32_R(p1,<sp/>yt,<sp/>cosVal);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multAcc_32x32_keep32_R(p0,<sp/>yt,<sp/>sinVal);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multSub_32x32_keep32_R(p1,<sp/>xt,<sp/>sinVal);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSrc[2<sp/>*<sp/>l]<sp/><sp/><sp/><sp/><sp/>=<sp/>p0<sp/>&lt;&lt;<sp/>1;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSrc[2<sp/>*<sp/>l<sp/>+<sp/>1]<sp/>=<sp/>p1<sp/>&lt;&lt;<sp/>1;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>first<sp/>col<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>plp_radix4_butterfly_q32<sp/>(pSrc,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n2,<sp/>(int32_t*)pCoef,<sp/>2U);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>second<sp/>col<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>plp_radix4_butterfly_q32<sp/>(pSrc<sp/>+<sp/>fftLen,<sp/>n2,<sp/>(int32_t*)pCoef,<sp/>2U);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>n2<sp/>=<sp/>fftLen<sp/>&gt;&gt;<sp/>1U;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n2;<sp/>i++)</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p0<sp/>=<sp/>pSrc[4<sp/>*<sp/>i<sp/>+<sp/>0];</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p1<sp/>=<sp/>pSrc[4<sp/>*<sp/>i<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xt<sp/>=<sp/>pSrc[4<sp/>*<sp/>i<sp/>+<sp/>2];</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yt<sp/>=<sp/>pSrc[4<sp/>*<sp/>i<sp/>+<sp/>3];</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p0<sp/>&lt;&lt;=<sp/>1U;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p1<sp/>&lt;&lt;=<sp/>1U;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xt<sp/>&lt;&lt;=<sp/>1U;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yt<sp/>&lt;&lt;=<sp/>1U;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSrc[4<sp/>*<sp/>i<sp/>+<sp/>0]<sp/>=<sp/>p0;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSrc[4<sp/>*<sp/>i<sp/>+<sp/>1]<sp/>=<sp/>p1;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSrc[4<sp/>*<sp/>i<sp/>+<sp/>2]<sp/>=<sp/>xt;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSrc[4<sp/>*<sp/>i<sp/>+<sp/>3]<sp/>=<sp/>yt;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal">}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>plp_radix4_butterfly_q32(int32_t<sp/>*pSrc,</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>fftLen,</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>*pCoef,</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>twidCoefModifier){</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>n1,<sp/>n2,<sp/>ia1,<sp/>ia2,<sp/>ia3,<sp/>i0,<sp/>i1,<sp/>i2,<sp/>i3,<sp/>j,<sp/>k;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>t1,<sp/>t2,<sp/>r1,<sp/>r2,<sp/>s1,<sp/>s2,<sp/>co1,<sp/>co2,<sp/>co3,<sp/>si1,<sp/>si2,<sp/>si3;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>xa,<sp/>xb,<sp/>xc,<sp/>xd;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>ya,<sp/>yb,<sp/>yc,<sp/>yd;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>xa_out,<sp/>xb_out,<sp/>xc_out,<sp/>xd_out;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>ya_out,<sp/>yb_out,<sp/>yc_out,<sp/>yd_out;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>*ptr1;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Total<sp/>process<sp/>is<sp/>divided<sp/>into<sp/>three<sp/>stages<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>process<sp/>first<sp/>stage,<sp/>middle<sp/>stages,<sp/>&amp;<sp/>last<sp/>stage<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>start<sp/>of<sp/>first<sp/>stage<sp/>process<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>Initializations<sp/>for<sp/>the<sp/>first<sp/>stage<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>n2<sp/>=<sp/>fftLen;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>n1<sp/>=<sp/>n2;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>n2<sp/>=<sp/>fftLen/4<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>n2<sp/>&gt;&gt;=<sp/>2U;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>i0<sp/>=<sp/>0U;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>ia1<sp/>=<sp/>0U;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>j<sp/>=<sp/>n2;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>Calculation<sp/>of<sp/>first<sp/>stage<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>index<sp/>calculation<sp/>for<sp/>the<sp/>input<sp/>as,<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>pSrc[i0<sp/>+<sp/>0],<sp/>pSrc[i0<sp/>+<sp/>fftLen/4],<sp/>pSrc[i0<sp/>+<sp/>fftLen/2U],<sp/>pSrc[i0<sp/>+<sp/>3fftLen/4]<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i1<sp/>=<sp/>i0<sp/>+<sp/>n2;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i2<sp/>=<sp/>i1<sp/>+<sp/>n2;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i3<sp/>=<sp/>i2<sp/>+<sp/>n2;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>input<sp/>is<sp/>in<sp/>1.31(q31)<sp/>format<sp/>and<sp/>provide<sp/>4<sp/>guard<sp/>bits<sp/>for<sp/>the<sp/>input<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>Butterfly<sp/>implementation<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>xa<sp/>+<sp/>xc<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r1<sp/>=<sp/>(pSrc[(2U<sp/>*<sp/>i0)]<sp/>&gt;&gt;<sp/>4U)<sp/>+<sp/>(pSrc[(2U<sp/>*<sp/>i2)]<sp/>&gt;&gt;<sp/>4U);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>xa<sp/>-<sp/>xc<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r2<sp/>=<sp/>(pSrc[(2U<sp/>*<sp/>i0)]<sp/>&gt;&gt;<sp/>4U)<sp/>-<sp/>(pSrc[(2U<sp/>*<sp/>i2)]<sp/>&gt;&gt;<sp/>4U);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>xb<sp/>+<sp/>xd<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t1<sp/>=<sp/>(pSrc[(2U<sp/>*<sp/>i1)]<sp/>&gt;&gt;<sp/>4U)<sp/>+<sp/>(pSrc[(2U<sp/>*<sp/>i3)]<sp/>&gt;&gt;<sp/>4U);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>ya<sp/>+<sp/>yc<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s1<sp/>=<sp/>(pSrc[(2U<sp/>*<sp/>i0)<sp/>+<sp/>1U]<sp/>&gt;&gt;<sp/>4U)<sp/>+<sp/>(pSrc[(2U<sp/>*<sp/>i2)<sp/>+<sp/>1U]<sp/>&gt;&gt;<sp/>4U);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>ya<sp/>-<sp/>yc<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s2<sp/>=<sp/>(pSrc[(2U<sp/>*<sp/>i0)<sp/>+<sp/>1U]<sp/>&gt;&gt;<sp/>4U)<sp/>-<sp/>(pSrc[(2U<sp/>*<sp/>i2)<sp/>+<sp/>1U]<sp/>&gt;&gt;<sp/>4U);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>xa&apos;<sp/>=<sp/>xa<sp/>+<sp/>xb<sp/>+<sp/>xc<sp/>+<sp/>xd<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSrc[2U<sp/>*<sp/>i0]<sp/>=<sp/>(r1<sp/>+<sp/>t1);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>(xa<sp/>+<sp/>xc)<sp/>-<sp/>(xb<sp/>+<sp/>xd)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r1<sp/>=<sp/>r1<sp/>-<sp/>t1;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>yb<sp/>+<sp/>yd<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t2<sp/>=<sp/>(pSrc[(2U<sp/>*<sp/>i1)<sp/>+<sp/>1U]<sp/>&gt;&gt;<sp/>4U)<sp/>+<sp/>(pSrc[(2U<sp/>*<sp/>i3)<sp/>+<sp/>1U]<sp/>&gt;&gt;<sp/>4U);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>ya&apos;<sp/>=<sp/>ya<sp/>+<sp/>yb<sp/>+<sp/>yc<sp/>+<sp/>yd<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSrc[(2U<sp/>*<sp/>i0)<sp/>+<sp/>1U]<sp/>=<sp/>(s1<sp/>+<sp/>t2);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>(ya<sp/>+<sp/>yc)<sp/>-<sp/>(yb<sp/>+<sp/>yd)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s1<sp/>=<sp/>s1<sp/>-<sp/>t2;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>yb<sp/>-<sp/>yd<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t1<sp/>=<sp/>(pSrc[(2U<sp/>*<sp/>i1)<sp/>+<sp/>1U]<sp/>&gt;&gt;<sp/>4U)<sp/>-<sp/>(pSrc[(2U<sp/>*<sp/>i3)<sp/>+<sp/>1U]<sp/>&gt;&gt;<sp/>4U);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>xb<sp/>-<sp/>xd<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t2<sp/>=<sp/>(pSrc[(2U<sp/>*<sp/>i1)]<sp/>&gt;&gt;<sp/>4U)<sp/>-<sp/>(pSrc[(2U<sp/>*<sp/>i3)]<sp/>&gt;&gt;<sp/>4U);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>index<sp/>calculation<sp/>for<sp/>the<sp/>coefficients<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ia2<sp/>=<sp/>2U<sp/>*<sp/>ia1;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>co2<sp/>=<sp/>pCoef[(ia2<sp/>*<sp/>2U)];</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>si2<sp/>=<sp/>pCoef[(ia2<sp/>*<sp/>2U)<sp/>+<sp/>1U];</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>xc&apos;<sp/>=<sp/>(xa-xb+xc-xd)co2<sp/>+<sp/>(ya-yb+yc-yd)(si2)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSrc[2U<sp/>*<sp/>i1]<sp/>=<sp/>(((int32_t)<sp/>(((int64_t)<sp/>r1<sp/>*<sp/>co2)<sp/>&gt;&gt;<sp/>32))<sp/>+</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((int32_t)<sp/>(((int64_t)<sp/>s1<sp/>*<sp/>si2)<sp/>&gt;&gt;<sp/>32)))<sp/>&lt;&lt;<sp/>1U;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>yc&apos;<sp/>=<sp/>(ya-yb+yc-yd)co2<sp/>-<sp/>(xa-xb+xc-xd)(si2)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSrc[(2U<sp/>*<sp/>i1)<sp/>+<sp/>1U]<sp/>=<sp/>(((int32_t)<sp/>(((int64_t)<sp/>s1<sp/>*<sp/>co2)<sp/>&gt;&gt;<sp/>32))<sp/>-</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((int32_t)<sp/>(((int64_t)<sp/>r1<sp/>*<sp/>si2)<sp/>&gt;&gt;<sp/>32)))<sp/>&lt;&lt;<sp/>1U;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>(xa<sp/>-<sp/>xc)<sp/>+<sp/>(yb<sp/>-<sp/>yd)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r1<sp/>=<sp/>r2<sp/>+<sp/>t1;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>(xa<sp/>-<sp/>xc)<sp/>-<sp/>(yb<sp/>-<sp/>yd)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r2<sp/>=<sp/>r2<sp/>-<sp/>t1;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>(ya<sp/>-<sp/>yc)<sp/>-<sp/>(xb<sp/>-<sp/>xd)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s1<sp/>=<sp/>s2<sp/>-<sp/>t2;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>(ya<sp/>-<sp/>yc)<sp/>+<sp/>(xb<sp/>-<sp/>xd)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s2<sp/>=<sp/>s2<sp/>+<sp/>t2;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>co1<sp/>=<sp/>pCoef[(ia1<sp/>*<sp/>2U)];</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>si1<sp/>=<sp/>pCoef[(ia1<sp/>*<sp/>2U)<sp/>+<sp/>1U];</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>xb&apos;<sp/>=<sp/>(xa+yb-xc-yd)co1<sp/>+<sp/>(ya-xb-yc+xd)(si1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSrc[2U<sp/>*<sp/>i2]<sp/>=<sp/>(((int32_t)<sp/>(((int64_t)<sp/>r1<sp/>*<sp/>co1)<sp/>&gt;&gt;<sp/>32))<sp/>+</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((int32_t)<sp/>(((int64_t)<sp/>s1<sp/>*<sp/>si1)<sp/>&gt;&gt;<sp/>32)))<sp/>&lt;&lt;<sp/>1U;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>yb&apos;<sp/>=<sp/>(ya-xb-yc+xd)co1<sp/>-<sp/>(xa+yb-xc-yd)(si1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSrc[(2U<sp/>*<sp/>i2)<sp/>+<sp/>1U]<sp/>=<sp/>(((int32_t)<sp/>(((int64_t)<sp/>s1<sp/>*<sp/>co1)<sp/>&gt;&gt;<sp/>32))<sp/>-</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((int32_t)<sp/>(((int64_t)<sp/>r1<sp/>*<sp/>si1)<sp/>&gt;&gt;<sp/>32)))<sp/>&lt;&lt;<sp/>1U;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>index<sp/>calculation<sp/>for<sp/>the<sp/>coefficients<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ia3<sp/>=<sp/>3U<sp/>*<sp/>ia1;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>co3<sp/>=<sp/>pCoef[(ia3<sp/>*<sp/>2U)];</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>si3<sp/>=<sp/>pCoef[(ia3<sp/>*<sp/>2U)<sp/>+<sp/>1U];</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>xd&apos;<sp/>=<sp/>(xa-yb-xc+yd)co3<sp/>+<sp/>(ya+xb-yc-xd)(si3)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSrc[2U<sp/>*<sp/>i3]<sp/>=<sp/>(((int32_t)<sp/>(((int64_t)<sp/>r2<sp/>*<sp/>co3)<sp/>&gt;&gt;<sp/>32))<sp/>+</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((int32_t)<sp/>(((int64_t)<sp/>s2<sp/>*<sp/>si3)<sp/>&gt;&gt;<sp/>32)))<sp/>&lt;&lt;<sp/>1U;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>yd&apos;<sp/>=<sp/>(ya+xb-yc-xd)co3<sp/>-<sp/>(xa-yb-xc+yd)(si3)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSrc[(2U<sp/>*<sp/>i3)<sp/>+<sp/>1U]<sp/>=<sp/>(((int32_t)<sp/>(((int64_t)<sp/>s2<sp/>*<sp/>co3)<sp/>&gt;&gt;<sp/>32))<sp/>-</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((int32_t)<sp/>(((int64_t)<sp/>r2<sp/>*<sp/>si3)<sp/>&gt;&gt;<sp/>32)))<sp/>&lt;&lt;<sp/>1U;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>Twiddle<sp/>coefficients<sp/>index<sp/>modifier<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ia1<sp/>=<sp/>ia1<sp/>+<sp/>twidCoefModifier;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>Updating<sp/>input<sp/>index<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i0<sp/>=<sp/>i0<sp/>+<sp/>1U;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(--j);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>end<sp/>of<sp/>first<sp/>stage<sp/>process<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>data<sp/>is<sp/>in<sp/>5.27(q27)<sp/>format<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>start<sp/>of<sp/>Middle<sp/>stages<sp/>process<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>each<sp/>stage<sp/>in<sp/>middle<sp/>stages<sp/>provides<sp/>two<sp/>down<sp/>scaling<sp/>of<sp/>the<sp/>input<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>twidCoefModifier<sp/>&lt;&lt;=<sp/>2U;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k<sp/>=<sp/>fftLen<sp/>/<sp/>4U;<sp/>k<sp/>&gt;<sp/>4U;<sp/>k<sp/>&gt;&gt;=<sp/>2U)</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>Initializations<sp/>for<sp/>the<sp/>first<sp/>stage<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n1<sp/>=<sp/>n2;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n2<sp/>&gt;&gt;=<sp/>2U;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ia1<sp/>=<sp/>0U;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>Calculation<sp/>of<sp/>first<sp/>stage<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0U;<sp/>j<sp/>&lt;=<sp/>(n2<sp/>-<sp/>1U);<sp/>j++)</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>index<sp/>calculation<sp/>for<sp/>the<sp/>coefficients<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ia2<sp/>=<sp/>ia1<sp/>+<sp/>ia1;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ia3<sp/>=<sp/>ia2<sp/>+<sp/>ia1;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>co1<sp/>=<sp/>pCoef[(ia1<sp/>*<sp/>2U)];</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>si1<sp/>=<sp/>pCoef[(ia1<sp/>*<sp/>2U)<sp/>+<sp/>1U];</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>co2<sp/>=<sp/>pCoef[(ia2<sp/>*<sp/>2U)];</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>si2<sp/>=<sp/>pCoef[(ia2<sp/>*<sp/>2U)<sp/>+<sp/>1U];</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>co3<sp/>=<sp/>pCoef[(ia3<sp/>*<sp/>2U)];</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>si3<sp/>=<sp/>pCoef[(ia3<sp/>*<sp/>2U)<sp/>+<sp/>1U];</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>Twiddle<sp/>coefficients<sp/>index<sp/>modifier<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ia1<sp/>=<sp/>ia1<sp/>+<sp/>twidCoefModifier;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i0<sp/>=<sp/>j;<sp/>i0<sp/>&lt;<sp/>fftLen;<sp/>i0<sp/>+=<sp/>n1)</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>index<sp/>calculation<sp/>for<sp/>the<sp/>input<sp/>as,<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>pSrc[i0<sp/>+<sp/>0],<sp/>pSrc[i0<sp/>+<sp/>fftLen/4],<sp/>pSrc[i0<sp/>+<sp/>fftLen/2U],<sp/>pSrc[i0<sp/>+<sp/>3fftLen/4]<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i1<sp/>=<sp/>i0<sp/>+<sp/>n2;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i2<sp/>=<sp/>i1<sp/>+<sp/>n2;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i3<sp/>=<sp/>i2<sp/>+<sp/>n2;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>Butterfly<sp/>implementation<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>xa<sp/>+<sp/>xc<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r1<sp/>=<sp/>pSrc[2U<sp/>*<sp/>i0]<sp/>+<sp/>pSrc[2U<sp/>*<sp/>i2];</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>xa<sp/>-<sp/>xc<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r2<sp/>=<sp/>pSrc[2U<sp/>*<sp/>i0]<sp/>-<sp/>pSrc[2U<sp/>*<sp/>i2];</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>ya<sp/>+<sp/>yc<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s1<sp/>=<sp/>pSrc[(2U<sp/>*<sp/>i0)<sp/>+<sp/>1U]<sp/>+<sp/>pSrc[(2U<sp/>*<sp/>i2)<sp/>+<sp/>1U];</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>ya<sp/>-<sp/>yc<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s2<sp/>=<sp/>pSrc[(2U<sp/>*<sp/>i0)<sp/>+<sp/>1U]<sp/>-<sp/>pSrc[(2U<sp/>*<sp/>i2)<sp/>+<sp/>1U];</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>xb<sp/>+<sp/>xd<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t1<sp/>=<sp/>pSrc[2U<sp/>*<sp/>i1]<sp/>+<sp/>pSrc[2U<sp/>*<sp/>i3];</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>xa&apos;<sp/>=<sp/>xa<sp/>+<sp/>xb<sp/>+<sp/>xc<sp/>+<sp/>xd<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSrc[2U<sp/>*<sp/>i0]<sp/>=<sp/>(r1<sp/>+<sp/>t1)<sp/>&gt;&gt;<sp/>2U;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>xa<sp/>+<sp/>xc<sp/>-(xb<sp/>+<sp/>xd)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r1<sp/>=<sp/>r1<sp/>-<sp/>t1;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>yb<sp/>+<sp/>yd<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t2<sp/>=<sp/>pSrc[(2U<sp/>*<sp/>i1)<sp/>+<sp/>1U]<sp/>+<sp/>pSrc[(2U<sp/>*<sp/>i3)<sp/>+<sp/>1U];</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>ya&apos;<sp/>=<sp/>ya<sp/>+<sp/>yb<sp/>+<sp/>yc<sp/>+<sp/>yd<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSrc[(2U<sp/>*<sp/>i0)<sp/>+<sp/>1U]<sp/>=<sp/>(s1<sp/>+<sp/>t2)<sp/>&gt;&gt;<sp/>2U;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>(ya<sp/>+<sp/>yc)<sp/>-<sp/>(yb<sp/>+<sp/>yd)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s1<sp/>=<sp/>s1<sp/>-<sp/>t2;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>(yb<sp/>-<sp/>yd)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t1<sp/>=<sp/>pSrc[(2U<sp/>*<sp/>i1)<sp/>+<sp/>1U]<sp/>-<sp/>pSrc[(2U<sp/>*<sp/>i3)<sp/>+<sp/>1U];</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>(xb<sp/>-<sp/>xd)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t2<sp/>=<sp/>pSrc[2U<sp/>*<sp/>i1]<sp/>-<sp/>pSrc[2U<sp/>*<sp/>i3];</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>xc&apos;<sp/>=<sp/>(xa-xb+xc-xd)co2<sp/>+<sp/>(ya-yb+yc-yd)(si2)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSrc[2U<sp/>*<sp/>i1]<sp/>=<sp/>(((int32_t)<sp/>(((int64_t)<sp/>r1<sp/>*<sp/>co2)<sp/>&gt;&gt;<sp/>32))<sp/>+</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((int32_t)<sp/>(((int64_t)<sp/>s1<sp/>*<sp/>si2)<sp/>&gt;&gt;<sp/>32)))<sp/>&gt;&gt;<sp/>1U;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>yc&apos;<sp/>=<sp/>(ya-yb+yc-yd)co2<sp/>-<sp/>(xa-xb+xc-xd)(si2)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSrc[(2U<sp/>*<sp/>i1)<sp/>+<sp/>1U]<sp/>=<sp/>(((int32_t)<sp/>(((int64_t)<sp/>s1<sp/>*<sp/>co2)<sp/>&gt;&gt;<sp/>32))<sp/>-</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((int32_t)<sp/>(((int64_t)<sp/>r1<sp/>*<sp/>si2)<sp/>&gt;&gt;<sp/>32)))<sp/>&gt;&gt;<sp/>1U;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>(xa<sp/>-<sp/>xc)<sp/>+<sp/>(yb<sp/>-<sp/>yd)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r1<sp/>=<sp/>r2<sp/>+<sp/>t1;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>(xa<sp/>-<sp/>xc)<sp/>-<sp/>(yb<sp/>-<sp/>yd)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r2<sp/>=<sp/>r2<sp/>-<sp/>t1;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>(ya<sp/>-<sp/>yc)<sp/>-<sp/><sp/>(xb<sp/>-<sp/>xd)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s1<sp/>=<sp/>s2<sp/>-<sp/>t2;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>(ya<sp/>-<sp/>yc)<sp/>+<sp/><sp/>(xb<sp/>-<sp/>xd)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s2<sp/>=<sp/>s2<sp/>+<sp/>t2;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>xb&apos;<sp/>=<sp/>(xa+yb-xc-yd)co1<sp/>+<sp/>(ya-xb-yc+xd)(si1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSrc[2U<sp/>*<sp/>i2]<sp/>=<sp/>(((int32_t)<sp/>(((int64_t)<sp/>r1<sp/>*<sp/>co1)<sp/>&gt;&gt;<sp/>32))<sp/>+</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((int32_t)<sp/>(((int64_t)<sp/>s1<sp/>*<sp/>si1)<sp/>&gt;&gt;<sp/>32)))<sp/>&gt;&gt;<sp/>1U;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>yb&apos;<sp/>=<sp/>(ya-xb-yc+xd)co1<sp/>-<sp/>(xa+yb-xc-yd)(si1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSrc[(2U<sp/>*<sp/>i2)<sp/>+<sp/>1U]<sp/>=<sp/>(((int32_t)<sp/>(((int64_t)<sp/>s1<sp/>*<sp/>co1)<sp/>&gt;&gt;<sp/>32))<sp/>-</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((int32_t)<sp/>(((int64_t)<sp/>r1<sp/>*<sp/>si1)<sp/>&gt;&gt;<sp/>32)))<sp/>&gt;&gt;<sp/>1U;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>xd&apos;<sp/>=<sp/>(xa-yb-xc+yd)co3<sp/>+<sp/>(ya+xb-yc-xd)(si3)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSrc[2U<sp/>*<sp/>i3]<sp/>=<sp/>(((int32_t)<sp/>(((int64_t)<sp/>r2<sp/>*<sp/>co3)<sp/>&gt;&gt;<sp/>32))<sp/>+</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((int32_t)<sp/>(((int64_t)<sp/>s2<sp/>*<sp/>si3)<sp/>&gt;&gt;<sp/>32)))<sp/>&gt;&gt;<sp/>1U;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>yd&apos;<sp/>=<sp/>(ya+xb-yc-xd)co3<sp/>-<sp/>(xa-yb-xc+yd)(si3)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSrc[(2U<sp/>*<sp/>i3)<sp/>+<sp/>1U]<sp/>=<sp/>(((int32_t)<sp/>(((int64_t)<sp/>s2<sp/>*<sp/>co3)<sp/>&gt;&gt;<sp/>32))<sp/>-</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((int32_t)<sp/>(((int64_t)<sp/>r2<sp/>*<sp/>si3)<sp/>&gt;&gt;<sp/>32)))<sp/>&gt;&gt;<sp/>1U;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>twidCoefModifier<sp/>&lt;&lt;=<sp/>2U;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>End<sp/>of<sp/>Middle<sp/>stages<sp/>process<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>data<sp/>is<sp/>in<sp/>11.21(q21)<sp/>format<sp/>for<sp/>the<sp/>1024<sp/>point<sp/>as<sp/>there<sp/>are<sp/>3<sp/>middle<sp/>stages<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>data<sp/>is<sp/>in<sp/>9.23(q23)<sp/>format<sp/>for<sp/>the<sp/>256<sp/>point<sp/>as<sp/>there<sp/>are<sp/>2<sp/>middle<sp/>stages<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>data<sp/>is<sp/>in<sp/>7.25(q25)<sp/>format<sp/>for<sp/>the<sp/>64<sp/>point<sp/>as<sp/>there<sp/>are<sp/>1<sp/>middle<sp/>stage<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>data<sp/>is<sp/>in<sp/>5.27(q27)<sp/>format<sp/>for<sp/>the<sp/>16<sp/>point<sp/>as<sp/>there<sp/>are<sp/>no<sp/>middle<sp/>stages<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>start<sp/>of<sp/>Last<sp/>stage<sp/>process<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>Initializations<sp/>for<sp/>the<sp/>last<sp/>stage<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>j<sp/>=<sp/>fftLen<sp/>&gt;&gt;<sp/>2;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr1<sp/>=<sp/>&amp;pSrc[0];</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>Calculations<sp/>of<sp/>last<sp/>stage<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Read<sp/>xa<sp/>(real),<sp/>ya(imag)<sp/>input<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xa<sp/>=<sp/>*ptr1++;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ya<sp/>=<sp/>*ptr1++;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Read<sp/>xb<sp/>(real),<sp/>yb(imag)<sp/>input<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xb<sp/>=<sp/>*ptr1++;</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yb<sp/>=<sp/>*ptr1++;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Read<sp/>xc<sp/>(real),<sp/>yc(imag)<sp/>input<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xc<sp/>=<sp/>*ptr1++;</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yc<sp/>=<sp/>*ptr1++;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Read<sp/>xc<sp/>(real),<sp/>yc(imag)<sp/>input<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xd<sp/>=<sp/>*ptr1++;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yd<sp/>=<sp/>*ptr1++;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>xa&apos;<sp/>=<sp/>xa<sp/>+<sp/>xb<sp/>+<sp/>xc<sp/>+<sp/>xd<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xa_out<sp/>=<sp/>xa<sp/>+<sp/>xb<sp/>+<sp/>xc<sp/>+<sp/>xd;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>ya&apos;<sp/>=<sp/>ya<sp/>+<sp/>yb<sp/>+<sp/>yc<sp/>+<sp/>yd<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ya_out<sp/>=<sp/>ya<sp/>+<sp/>yb<sp/>+<sp/>yc<sp/>+<sp/>yd;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>pointer<sp/>updation<sp/>for<sp/>writing<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr1<sp/>=<sp/>ptr1<sp/>-<sp/>8U;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>writing<sp/>xa&apos;<sp/>and<sp/>ya&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*ptr1++<sp/>=<sp/>xa_out;</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*ptr1++<sp/>=<sp/>ya_out;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xc_out<sp/>=<sp/>(xa<sp/>-<sp/>xb<sp/>+<sp/>xc<sp/>-<sp/>xd);</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yc_out<sp/>=<sp/>(ya<sp/>-<sp/>yb<sp/>+<sp/>yc<sp/>-<sp/>yd);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>writing<sp/>xc&apos;<sp/>and<sp/>yc&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*ptr1++<sp/>=<sp/>xc_out;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*ptr1++<sp/>=<sp/>yc_out;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xb_out<sp/>=<sp/>(xa<sp/>+<sp/>yb<sp/>-<sp/>xc<sp/>-<sp/>yd);</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yb_out<sp/>=<sp/>(ya<sp/>-<sp/>xb<sp/>-<sp/>yc<sp/>+<sp/>xd);</highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>writing<sp/>xb&apos;<sp/>and<sp/>yb&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*ptr1++<sp/>=<sp/>xb_out;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*ptr1++<sp/>=<sp/>yb_out;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xd_out<sp/>=<sp/>(xa<sp/>-<sp/>yb<sp/>-<sp/>xc<sp/>+<sp/>yd);</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yd_out<sp/>=<sp/>(ya<sp/>+<sp/>xb<sp/>-<sp/>yc<sp/>-<sp/>xd);</highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>writing<sp/>xd&apos;<sp/>and<sp/>yd&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*ptr1++<sp/>=<sp/>xd_out;</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*ptr1++<sp/>=<sp/>yd_out;</highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(--j);</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>output<sp/>is<sp/>in<sp/>11.21(q21)<sp/>format<sp/>for<sp/>the<sp/>1024<sp/>point<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>output<sp/>is<sp/>in<sp/>9.23(q23)<sp/>format<sp/>for<sp/>the<sp/>256<sp/>point<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>output<sp/>is<sp/>in<sp/>7.25(q25)<sp/>format<sp/>for<sp/>the<sp/>64<sp/>point<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>output<sp/>is<sp/>in<sp/>5.27(q27)<sp/>format<sp/>for<sp/>the<sp/>16<sp/>point<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>End<sp/>of<sp/>last<sp/>stage<sp/>process<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal">}</highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/github/workspace/src/TransformFunctions/kernels/plp_cfft_q32s_xpulpv2.c"/>
  </compounddef>
</doxygen>
